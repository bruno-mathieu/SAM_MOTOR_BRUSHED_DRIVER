

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Oct 21 15:17:35 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36  0000                     _ADCON0bits	set	4034
    37  0000                     _ADCON1bits	set	4033
    38  0000                     _ADCON2bits	set	4032
    39  0000                     _ADRESH	set	4036
    40  0000                     _ADRESL	set	4035
    41  0000                     _ANCON0	set	3933
    42  0000                     _ANCON1	set	3932
    43  0000                     _BRGCON1	set	3651
    44  0000                     _BRGCON2	set	3652
    45  0000                     _BRGCON3	set	3653
    46  0000                     _CANCON	set	3951
    47  0000                     _CANSTAT	set	3950
    48  0000                     _CCP2CON	set	3920
    49  0000                     _CCP2CONbits	set	3920
    50  0000                     _CCP3CON	set	3917
    51  0000                     _CCP3CONbits	set	3917
    52  0000                     _CCP4CON	set	3914
    53  0000                     _CCP5CON	set	3911
    54  0000                     _CCPR2L	set	3921
    55  0000                     _CCPR3L	set	3918
    56  0000                     _CCPTMRS	set	3993
    57  0000                     _CIOCON	set	3952
    58  0000                     _INTCON	set	4082
    59  0000                     _INTCON2	set	4081
    60  0000                     _INTCON2bits	set	4081
    61  0000                     _INTCON3	set	4080
    62  0000                     _INTCONbits	set	4082
    63  0000                     _IPR1	set	3999
    64  0000                     _IPR2	set	4002
    65  0000                     _IPR3	set	4005
    66  0000                     _IPR4	set	4024
    67  0000                     _IPR5	set	3960
    68  0000                     _LATBbits	set	3978
    69  0000                     _LATCbits	set	3979
    70  0000                     _LATDbits	set	3980
    71  0000                     _LATEbits	set	3981
    72  0000                     _OSCCONbits	set	4051
    73  0000                     _PADCFG1bits	set	3926
    74  0000                     _PIE1	set	3997
    75  0000                     _PIE2	set	4000
    76  0000                     _PIE3	set	4003
    77  0000                     _PIE4	set	4022
    78  0000                     _PIE5	set	3958
    79  0000                     _PIR1	set	3998
    80  0000                     _PIR2	set	4001
    81  0000                     _PIR3	set	4004
    82  0000                     _PIR4	set	4023
    83  0000                     _PIR5	set	3959
    84  0000                     _PIR5bits	set	3959
    85  0000                     _PORTB	set	3969
    86  0000                     _PR2	set	4043
    87  0000                     _RCONbits	set	4048
    88  0000                     _RXF0SIDH	set	3808
    89  0000                     _RXF0SIDL	set	3809
    90  0000                     _RXF1SIDH	set	3812
    91  0000                     _RXF1SIDL	set	3813
    92  0000                     _RXF2SIDH	set	3816
    93  0000                     _RXF2SIDL	set	3817
    94  0000                     _RXF3SIDH	set	3820
    95  0000                     _RXF3SIDL	set	3821
    96  0000                     _RXF4SIDH	set	3824
    97  0000                     _RXF4SIDL	set	3825
    98  0000                     _RXF5SIDH	set	3828
    99  0000                     _RXF5SIDL	set	3829
   100  0000                     _RXM0SIDH	set	3832
   101  0000                     _RXM0SIDL	set	3833
   102  0000                     _RXM1SIDH	set	3836
   103  0000                     _RXM1SIDL	set	3837
   104  0000                     _T0CONbits	set	4053
   105  0000                     _T2CONbits	set	4042
   106  0000                     _TMR0H	set	4055
   107  0000                     _TMR0L	set	4054
   108  0000                     _TRISA	set	3986
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISC	set	3988
   111  0000                     _TRISD	set	3989
   112  0000                     _TRISE	set	3990
   113  0000                     _WPUB	set	3931
   114                           
   115 ;; *************** function _low_isr *****************
   116 ;; Defined at:
   117 ;;		line 69 in file "interrupts.c"
   118 ;; Parameters:    Size  Location     Type
   119 ;;		None
   120 ;; Auto vars:     Size  Location     Type
   121 ;;		None
   122 ;; Return value:  Size  Location     Type
   123 ;;		None               void
   124 ;; Registers used:
   125 ;;		wreg, status,2
   126 ;; Tracked objects:
   127 ;;		On entry : 0/0
   128 ;;		On exit  : 0/0
   129 ;;		Unchanged: 0/0
   130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   133 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   134 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   135 ;;Total ram usage:       18 bytes
   136 ;; Hardware stack levels used:    1
   137 ;; Hardware stack levels required when called:    3
   138 ;; This function calls:
   139 ;;		Nothing
   140 ;; This function is called by:
   141 ;;		Interrupt level 1
   142 ;; This function uses a non-reentrant model
   143 ;;
   144                           
   145                           	psect	intcodelo
   146  000018                     __pintcodelo:
   147                           	opt stack 0
   148  0000                     _TXB2CON	set	3840
   149  0000                     _TXB1CON	set	3856
   150  0000                     _TXB0CON	set	3872
   151  0000                     _RXB1CON	set	3888
   152  0000                     _RXB0CON	set	3936
   153  0000                     _RXM1EXIDEN	set	30699
   154  0000                     _RXM0EXIDM	set	30667
   155  0000                     _RXB1OVFL	set	31630
   156  0000                     _RXB1IF	set	31673
   157  0000                     _RXB1FUL	set	31111
   158  0000                     _RXB0OVFL	set	31631
   159  0000                     _RXB0IF	set	31672
   160  0000                     _RXB0FUL	set	31495
   161  0000                     _RXB0FILHIT0	set	31488
   162  0000                     _MDSEL1	set	31639
   163  0000                     _MDSEL0	set	31638
   164  0000                     _IRXIF	set	31679
   165  0000                     
   166                           ; #config settings
   167  000018                     _low_isr:
   168                           	opt stack 24
   169                           
   170                           ; BSR set to: 0
   171                           ;incstack = 0
   172  000018  CFD8 F002          	movff	status,??_low_isr+1
   173  00001C  CFE8 F003          	movff	wreg,??_low_isr+2
   174  000020  CFE0 F004          	movff	bsr,??_low_isr+3
   175  000024  CFFA F005          	movff	pclath,??_low_isr+4
   176  000028  CFFB F006          	movff	pclatu,??_low_isr+5
   177  00002C  CFE9 F007          	movff	fsr0l,??_low_isr+6
   178  000030  CFEA F008          	movff	fsr0h,??_low_isr+7
   179  000034  CFE1 F009          	movff	fsr1l,??_low_isr+8
   180  000038  CFE2 F00A          	movff	fsr1h,??_low_isr+9
   181  00003C  CFD9 F00B          	movff	fsr2l,??_low_isr+10
   182  000040  CFDA F00C          	movff	fsr2h,??_low_isr+11
   183  000044  CFF3 F00D          	movff	prodl,??_low_isr+12
   184  000048  CFF4 F00E          	movff	prodh,??_low_isr+13
   185  00004C  CFF6 F00F          	movff	tblptrl,??_low_isr+14
   186  000050  CFF7 F010          	movff	tblptrh,??_low_isr+15
   187  000054  CFF8 F011          	movff	tblptru,??_low_isr+16
   188  000058  CFF5 F012          	movff	tablat,??_low_isr+17
   189                           
   190                           ;interrupts.c: 80: if(INTCONbits.TMR0IF)
   191  00005C  A4F2               	btfss	intcon,2,c	;volatile
   192  00005E  D00B               	goto	i1l24
   193                           
   194                           ;interrupts.c: 81: {
   195                           ;interrupts.c: 82: INTCONbits.TMR0IF=0;
   196  000060  94F2               	bcf	intcon,2,c	;volatile
   197                           
   198                           ;interrupts.c: 84: msTickCounter=1;
   199  000062  6E01               	movwf	??_low_isr& (0+255),c
   200  000064  0E01               	movlw	1
   201  000066  0100               	movlb	0	; () banked
   202  000068  0100               	movlb	0	; () banked
   203  00006A  6FA4               	movwf	_msTickCounter& (0+255),b
   204  00006C  5001               	movf	??_low_isr& (0+255),w,c
   205                           
   206                           ; BSR set to: 0
   207                           ;interrupts.c: 86: TMR0H = 0xFB;
   208  00006E  0EFB               	movlw	251
   209  000070  6ED7               	movwf	4055,c	;volatile
   210                           
   211                           ; BSR set to: 0
   212                           ;interrupts.c: 87: TMR0L = 0x1E;
   213  000072  0E1E               	movlw	30
   214  000074  6ED6               	movwf	4054,c	;volatile
   215  000076                     i1l24:
   216  000076  C012  FFF5         	movff	??_low_isr+17,tablat
   217  00007A  C011  FFF8         	movff	??_low_isr+16,tblptru
   218  00007E  C010  FFF7         	movff	??_low_isr+15,tblptrh
   219  000082  C00F  FFF6         	movff	??_low_isr+14,tblptrl
   220  000086  C00E  FFF4         	movff	??_low_isr+13,prodh
   221  00008A  C00D  FFF3         	movff	??_low_isr+12,prodl
   222  00008E  C00C  FFDA         	movff	??_low_isr+11,fsr2h
   223  000092  C00B  FFD9         	movff	??_low_isr+10,fsr2l
   224  000096  C00A  FFE2         	movff	??_low_isr+9,fsr1h
   225  00009A  C009  FFE1         	movff	??_low_isr+8,fsr1l
   226  00009E  C008  FFEA         	movff	??_low_isr+7,fsr0h
   227  0000A2  C007  FFE9         	movff	??_low_isr+6,fsr0l
   228  0000A6  C006  FFFB         	movff	??_low_isr+5,pclatu
   229  0000AA  C005  FFFA         	movff	??_low_isr+4,pclath
   230  0000AE  C004  FFE0         	movff	??_low_isr+3,bsr
   231  0000B2  C003  FFE8         	movff	??_low_isr+2,wreg
   232  0000B6  C002  FFD8         	movff	??_low_isr+1,status
   233  0000BA  0010               	retfie	
   234  0000BC                     __end_of_low_isr:
   235                           	opt stack 0
   236                           pclatu	equ	0xFFB
   237                           pclath	equ	0xFFA
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           prodh	equ	0xFF4
   243                           prodl	equ	0xFF3
   244                           intcon	equ	0xFF2
   245                           fsr0h	equ	0xFEA
   246                           fsr0l	equ	0xFE9
   247                           wreg	equ	0xFE8
   248                           fsr1h	equ	0xFE2
   249                           fsr1l	equ	0xFE1
   250                           bsr	equ	0xFE0
   251                           fsr2h	equ	0xFDA
   252                           fsr2l	equ	0xFD9
   253                           status	equ	0xFD8
   254                           
   255                           	psect	cinit
   256  000C60                     __pcinit:
   257                           	opt stack 0
   258  000C60                     start_initialization:
   259                           	opt stack 0
   260  000C60                     __initialization:
   261                           	opt stack 0
   262                           
   263                           ; Clear objects allocated to BANK2 (144 bytes)
   264  000C60  EE02  F000         	lfsr	0,__pbssBANK2
   265  000C64  0E90               	movlw	144
   266  000C66                     clear_0:
   267  000C66  6AEE               	clrf	postinc0,c
   268  000C68  06E8               	decf	wreg,f,c
   269  000C6A  E1FD               	bnz	clear_0
   270                           
   271                           ; Clear objects allocated to BANK1 (144 bytes)
   272  000C6C  EE01  F000         	lfsr	0,__pbssBANK1
   273  000C70  0E90               	movlw	144
   274  000C72                     clear_1:
   275  000C72  6AEE               	clrf	postinc0,c
   276  000C74  06E8               	decf	wreg,f,c
   277  000C76  E1FD               	bnz	clear_1
   278                           
   279                           ; Clear objects allocated to BANK0 (69 bytes)
   280  000C78  EE00  F060         	lfsr	0,__pbssBANK0
   281  000C7C  0E45               	movlw	69
   282  000C7E                     clear_2:
   283  000C7E  6AEE               	clrf	postinc0,c
   284  000C80  06E8               	decf	wreg,f,c
   285  000C82  E1FD               	bnz	clear_2
   286                           
   287                           ; Clear objects allocated to COMRAM (3 bytes)
   288  000C84  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   289  000C86  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   290  000C88  6A47               	clrf	__pbssCOMRAM& (0+255),c
   291  000C8A                     end_of_initialization:
   292                           	opt stack 0
   293  000C8A                     __end_of__initialization:
   294                           	opt stack 0
   295  000C8A  0100               	movlb	0
   296  000C8C  EF60  F000         	goto	_main	;jump to C main() function
   297                           pclatu	equ	0xFFB
   298                           pclath	equ	0xFFA
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           prodh	equ	0xFF4
   304                           prodl	equ	0xFF3
   305                           intcon	equ	0xFF2
   306                           postinc0	equ	0xFEE
   307                           fsr0h	equ	0xFEA
   308                           fsr0l	equ	0xFE9
   309                           wreg	equ	0xFE8
   310                           fsr1h	equ	0xFE2
   311                           fsr1l	equ	0xFE1
   312                           bsr	equ	0xFE0
   313                           fsr2h	equ	0xFDA
   314                           fsr2l	equ	0xFD9
   315                           status	equ	0xFD8
   316                           
   317                           	psect	bssCOMRAM
   318  000047                     __pbssCOMRAM:
   319                           	opt stack 0
   320  000047                     _LocalCanAdress:
   321                           	opt stack 0
   322  000047                     	ds	1
   323  000048                     _MotorTypeIdentifierAdress:
   324                           	opt stack 0
   325  000048                     	ds	1
   326  000049                     __ECANRxFilterHitInfo:
   327                           	opt stack 0
   328  000049                     	ds	1
   329                           pclatu	equ	0xFFB
   330                           pclath	equ	0xFFA
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           prodh	equ	0xFF4
   336                           prodl	equ	0xFF3
   337                           intcon	equ	0xFF2
   338                           postinc0	equ	0xFEE
   339                           fsr0h	equ	0xFEA
   340                           fsr0l	equ	0xFE9
   341                           wreg	equ	0xFE8
   342                           fsr1h	equ	0xFE2
   343                           fsr1l	equ	0xFE1
   344                           bsr	equ	0xFE0
   345                           fsr2h	equ	0xFDA
   346                           fsr2l	equ	0xFD9
   347                           status	equ	0xFD8
   348                           
   349                           	psect	bssBANK0
   350  000060                     __pbssBANK0:
   351                           	opt stack 0
   352  000060                     _TempMotorOrdertable:
   353                           	opt stack 0
   354  000060                     	ds	64
   355  0000A0                     _MotorOrder:
   356                           	opt stack 0
   357  0000A0                     	ds	2
   358  0000A2                     _UserOrder:
   359                           	opt stack 0
   360  0000A2                     	ds	2
   361  0000A4                     _msTickCounter:
   362                           	opt stack 0
   363  0000A4                     	ds	1
   364                           pclatu	equ	0xFFB
   365                           pclath	equ	0xFFA
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           prodh	equ	0xFF4
   371                           prodl	equ	0xFF3
   372                           intcon	equ	0xFF2
   373                           postinc0	equ	0xFEE
   374                           fsr0h	equ	0xFEA
   375                           fsr0l	equ	0xFE9
   376                           wreg	equ	0xFE8
   377                           fsr1h	equ	0xFE2
   378                           fsr1l	equ	0xFE1
   379                           bsr	equ	0xFE0
   380                           fsr2h	equ	0xFDA
   381                           fsr2l	equ	0xFD9
   382                           status	equ	0xFD8
   383                           
   384                           	psect	bssBANK1
   385  000100                     __pbssBANK1:
   386                           	opt stack 0
   387  000100                     _CANTxFifo:
   388                           	opt stack 0
   389  000100                     	ds	144
   390                           pclatu	equ	0xFFB
   391                           pclath	equ	0xFFA
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           prodh	equ	0xFF4
   397                           prodl	equ	0xFF3
   398                           intcon	equ	0xFF2
   399                           postinc0	equ	0xFEE
   400                           fsr0h	equ	0xFEA
   401                           fsr0l	equ	0xFE9
   402                           wreg	equ	0xFE8
   403                           fsr1h	equ	0xFE2
   404                           fsr1l	equ	0xFE1
   405                           bsr	equ	0xFE0
   406                           fsr2h	equ	0xFDA
   407                           fsr2l	equ	0xFD9
   408                           status	equ	0xFD8
   409                           
   410                           	psect	bssBANK2
   411  000200                     __pbssBANK2:
   412                           	opt stack 0
   413  000200                     _CANRxFifo:
   414                           	opt stack 0
   415  000200                     	ds	144
   416                           pclatu	equ	0xFFB
   417                           pclath	equ	0xFFA
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           prodh	equ	0xFF4
   423                           prodl	equ	0xFF3
   424                           intcon	equ	0xFF2
   425                           postinc0	equ	0xFEE
   426                           fsr0h	equ	0xFEA
   427                           fsr0l	equ	0xFE9
   428                           wreg	equ	0xFE8
   429                           fsr1h	equ	0xFE2
   430                           fsr1l	equ	0xFE1
   431                           bsr	equ	0xFE0
   432                           fsr2h	equ	0xFDA
   433                           fsr2l	equ	0xFD9
   434                           status	equ	0xFD8
   435                           
   436                           	psect	cstackBANK0
   437  0000A5                     __pcstackBANK0:
   438                           	opt stack 0
   439  0000A5                     ??_CANTxFifoInit:
   440  0000A5                     ??_CANRxFifoInit:
   441  0000A5                     ??_MotorInitVar:
   442  0000A5                     ??_MotorMeanComputation:
   443  0000A5                     ?___lwdiv:
   444                           	opt stack 0
   445  0000A5                     GetKeyCode@temp:
   446                           	opt stack 0
   447  0000A5                     PutMotorOrder@direction:
   448                           	opt stack 0
   449  0000A5                     ___lwdiv@dividend:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x0
   453  0000A5                     	ds	1
   454  0000A6                     ??_PutMotorOrder:
   455  0000A6                     MotorInitVar@i:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x1
   459  0000A6                     	ds	1
   460  0000A7                     PutMotorOrder@temp:
   461                           	opt stack 0
   462  0000A7                     ___lwdiv@divisor:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x2
   466  0000A7                     	ds	1
   467  0000A8                     PutMotorOrder@value:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x3
   471  0000A8                     	ds	1
   472  0000A9                     ??___lwdiv:
   473  0000A9                     MotorMeanComputation@value:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x4
   477  0000A9                     	ds	1
   478  0000AA                     ___lwdiv@quotient:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x5
   482  0000AA                     	ds	1
   483  0000AB                     MotorMeanComputation@LocalPowerValue:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x6
   487  0000AB                     	ds	1
   488  0000AC                     MotorMeanComputation@i_1665:
   489                           	opt stack 0
   490  0000AC                     ___lwdiv@counter:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x7
   494  0000AC                     	ds	1
   495  0000AD                     MotorMeanComputation@i:
   496                           	opt stack 0
   497  0000AD                     GetThrotle@adc_result:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x8
   501  0000AD                     	ds	2
   502  0000AF                     ??_main:
   503                           
   504                           ; 0 bytes @ 0xA
   505  0000AF                     	ds	1
   506  0000B0                     main@OldKeyCode:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0xB
   510  0000B0                     	ds	1
   511  0000B1                     main@KeyEvent:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0xC
   515  0000B1                     	ds	1
   516  0000B2                     main@AutotestResult:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0xD
   520  0000B2                     	ds	1
   521  0000B3                     main@OrderLocked:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0xE
   525  0000B3                     	ds	1
   526  0000B4                     main@ThrottlePosition:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0xF
   530  0000B4                     	ds	1
   531                           pclatu	equ	0xFFB
   532                           pclath	equ	0xFFA
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           prodh	equ	0xFF4
   538                           prodl	equ	0xFF3
   539                           intcon	equ	0xFF2
   540                           postinc0	equ	0xFEE
   541                           fsr0h	equ	0xFEA
   542                           fsr0l	equ	0xFE9
   543                           wreg	equ	0xFE8
   544                           fsr1h	equ	0xFE2
   545                           fsr1l	equ	0xFE1
   546                           bsr	equ	0xFE0
   547                           fsr2h	equ	0xFDA
   548                           fsr2l	equ	0xFD9
   549                           status	equ	0xFD8
   550                           
   551                           	psect	cstackCOMRAM
   552  000001                     __pcstackCOMRAM:
   553                           	opt stack 0
   554  000001                     ??_low_isr:
   555  000001                     
   556                           ; 1 bytes @ 0x0
   557  000001                     	ds	18
   558  000013                     __RegsToCANID@ptr:
   559                           	opt stack 0
   560  000013                     PutCANRxFifo@PutMessage:
   561                           	opt stack 0
   562                           
   563                           ; 14 bytes @ 0x12
   564  000013                     	ds	2
   565  000015                     __RegsToCANID@val:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x14
   569  000015                     	ds	2
   570  000017                     __RegsToCANID@type:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x16
   574  000017                     	ds	1
   575  000018                     ??__RegsToCANID:
   576                           
   577                           ; 0 bytes @ 0x17
   578  000018                     	ds	2
   579  00001A                     __RegsToCANID@Value:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x19
   583  00001A                     	ds	2
   584  00001C                     ECANReceiveMessage@id:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x1B
   588  00001C                     	ds	2
   589  00001E                     ECANReceiveMessage@data:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x1D
   593  00001E                     	ds	2
   594  000020                     ECANReceiveMessage@dataLen:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x1F
   598  000020                     	ds	1
   599  000021                     ??_PutCANRxFifo:
   600                           
   601                           ; 0 bytes @ 0x20
   602  000021                     	ds	1
   603  000022                     ECANReceiveMessage@msgFlags:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x21
   607  000022                     	ds	2
   608  000024                     ??_ECANReceiveMessage:
   609                           
   610                           ; 0 bytes @ 0x23
   611  000024                     	ds	1
   612  000025                     ECANReceiveMessage@savedPtr:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x24
   616  000025                     	ds	2
   617  000027                     ECANReceiveMessage@i:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x26
   621  000027                     	ds	1
   622  000028                     ECANReceiveMessage@ptr:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x27
   626  000028                     	ds	2
   627  00002A                     ECANReceiveMessage@temp:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x29
   631  00002A                     	ds	1
   632  00002B                     ??_high_isr:
   633                           
   634                           ; 0 bytes @ 0x2A
   635  00002B                     	ds	14
   636  000039                     high_isr@CANRxNewMessage:
   637                           	opt stack 0
   638                           
   639                           ; 14 bytes @ 0x38
   640  000039                     	ds	14
   641                           pclatu	equ	0xFFB
   642                           pclath	equ	0xFFA
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           prodh	equ	0xFF4
   648                           prodl	equ	0xFF3
   649                           intcon	equ	0xFF2
   650                           postinc0	equ	0xFEE
   651                           fsr0h	equ	0xFEA
   652                           fsr0l	equ	0xFE9
   653                           wreg	equ	0xFE8
   654                           fsr1h	equ	0xFE2
   655                           fsr1l	equ	0xFE1
   656                           bsr	equ	0xFE0
   657                           fsr2h	equ	0xFDA
   658                           fsr2l	equ	0xFD9
   659                           status	equ	0xFD8
   660                           
   661 ;;
   662 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   663 ;;
   664 ;; *************** function _main *****************
   665 ;; Defined at:
   666 ;;		line 51 in file "main.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  TempCANRxMsg   14    0        struct CANRxMsg
   671 ;;  TempCANTxMsg   14    0        struct CANTxMsg
   672 ;;  TempVarInt      2    0        unsigned int 
   673 ;;  ThrottlePosi    1   15[BANK0 ] unsigned char 
   674 ;;  OrderLocked     1   14[BANK0 ] unsigned char 
   675 ;;  AutotestResu    1   13[BANK0 ] unsigned char 
   676 ;;  KeyEvent        1   12[BANK0 ] unsigned char 
   677 ;;  OldKeyCode      1   11[BANK0 ] unsigned char 
   678 ;;  TempVar         1    0        unsigned char 
   679 ;; Return value:  Size  Location     Type
   680 ;;		None               void
   681 ;; Registers used:
   682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   689 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   690 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   691 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   692 ;;Total ram usage:        6 bytes
   693 ;; Hardware stack levels required when called:    6
   694 ;; This function calls:
   695 ;;		_CANRxFifoInit
   696 ;;		_CANTxFifoInit
   697 ;;		_ConfigureCCP
   698 ;;		_ConfigureGPIO
   699 ;;		_ConfigureInterrupts
   700 ;;		_ConfigureOscillator
   701 ;;		_ConfigureTimers
   702 ;;		_GetCanAdress
   703 ;;		_GetKeyCode
   704 ;;		_GetThrotle
   705 ;;		_MotorInitVar
   706 ;;		_MotorMeanComputation
   707 ;;		_PutMotorOrder
   708 ;;		_SystemTest
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text0
   715  0000C0                     __ptext0:
   716                           	opt stack 0
   717  0000C0                     _main:
   718                           	opt stack 24
   719                           
   720                           ;main.c: 53: char TempVar;
   721                           ;main.c: 54: unsigned int TempVarInt;
   722                           ;main.c: 56: char OldKeyCode;
   723                           ;main.c: 57: char KeyEvent;
   724                           ;main.c: 58: char OrderLocked=0;
   725                           
   726                           ;incstack = 0
   727  0000C0  0100               	movlb	0	; () banked
   728  0000C2  6FAF               	movwf	??_main& (0+255),b
   729  0000C4  0E00               	movlw	0
   730  0000C6  0100               	movlb	0	; () banked
   731  0000C8  0100               	movlb	0	; () banked
   732  0000CA  6FB3               	movwf	main@OrderLocked& (0+255),b
   733  0000CC  0100               	movlb	0	; () banked
   734  0000CE  51AF               	movf	??_main& (0+255),w,b
   735                           
   736                           ; BSR set to: 0
   737                           ;main.c: 59: char ThrottlePosition;
   738                           ;main.c: 62: char AutotestResult;
   739                           ;main.c: 65: struct CANTxMsg TempCANTxMsg;
   740                           ;main.c: 68: struct CANRxMsg TempCANRxMsg;
   741                           ;main.c: 76: ConfigureOscillator();
   742  0000D0  EC80  F006         	call	_ConfigureOscillator	;wreg free
   743                           
   744                           ;main.c: 77: _delay((unsigned long)((10)*(64000000/4000.0)));
   745  0000D4  0ED0               	movlw	208
   746  0000D6  0100               	movlb	0	; () banked
   747  0000D8  6FAF               	movwf	??_main& (0+255),b
   748  0000DA  0ECA               	movlw	202
   749  0000DC                     u1467:
   750  0000DC  2EE8               	decfsz	wreg,f,c
   751  0000DE  D7FE               	goto	u1467
   752  0000E0  2FAF               	decfsz	??_main& (0+255),f,b
   753  0000E2  D7FC               	goto	u1467
   754                           
   755                           ;main.c: 80: ConfigureGPIO();
   756  0000E4  EC64  F005         	call	_ConfigureGPIO	;wreg free
   757                           
   758                           ;main.c: 83: LocalCanAdress = GetCanAdress();
   759  0000E8  EC89  F006         	call	_GetCanAdress	;wreg free
   760  0000EC  6E47               	movwf	_LocalCanAdress,c
   761                           
   762                           ;main.c: 90: ConfigureTimers();
   763  0000EE  EC48  F006         	call	_ConfigureTimers	;wreg free
   764                           
   765                           ;main.c: 93: ConfigureCCP();
   766  0000F2  EC5F  F006         	call	_ConfigureCCP	;wreg free
   767                           
   768                           ;main.c: 100: msTickCounter=0;
   769  0000F6  0100               	movlb	0	; () banked
   770  0000F8  6FAF               	movwf	??_main& (0+255),b
   771  0000FA  0E00               	movlw	0
   772  0000FC  0100               	movlb	0	; () banked
   773  0000FE  0100               	movlb	0	; () banked
   774  000100  6FA4               	movwf	_msTickCounter& (0+255),b
   775  000102  0100               	movlb	0	; () banked
   776  000104  51AF               	movf	??_main& (0+255),w,b
   777                           
   778                           ;main.c: 103: CANTxFifoInit();
   779  000106  ECEE  F005         	call	_CANTxFifoInit	;wreg free
   780                           
   781                           ;main.c: 104: CANRxFifoInit();
   782  00010A  EC0F  F006         	call	_CANRxFifoInit	;wreg free
   783                           
   784                           ;main.c: 107: MotorInitVar();
   785  00010E  ECC9  F005         	call	_MotorInitVar	;wreg free
   786                           
   787                           ;main.c: 108: UserOrder.PowerValue=0;
   788  000112  0100               	movlb	0	; () banked
   789  000114  6FAF               	movwf	??_main& (0+255),b
   790  000116  0E00               	movlw	0
   791  000118  0100               	movlb	0	; () banked
   792  00011A  0100               	movlb	0	; () banked
   793  00011C  6FA2               	movwf	_UserOrder& (0+255),b
   794  00011E  0100               	movlb	0	; () banked
   795  000120  51AF               	movf	??_main& (0+255),w,b
   796                           
   797                           ; BSR set to: 0
   798                           ;main.c: 109: MotorOrder.PowerValue=0;
   799  000122  0100               	movlb	0	; () banked
   800  000124  6FAF               	movwf	??_main& (0+255),b
   801  000126  0E00               	movlw	0
   802  000128  0100               	movlb	0	; () banked
   803  00012A  0100               	movlb	0	; () banked
   804  00012C  6FA0               	movwf	_MotorOrder& (0+255),b
   805  00012E  0100               	movlb	0	; () banked
   806  000130  51AF               	movf	??_main& (0+255),w,b
   807                           
   808                           ; BSR set to: 0
   809                           ;main.c: 111: OldKeyCode=GetKeyCode();
   810  000132  EC73  F006         	call	_GetKeyCode	;wreg free
   811  000136  0100               	movlb	0	; () banked
   812  000138  0100               	movlb	0	; () banked
   813  00013A  6FB0               	movwf	main@OldKeyCode& (0+255),b
   814                           
   815                           ; BSR set to: 0
   816                           ;main.c: 112: KeyEvent=0;
   817  00013C  0100               	movlb	0	; () banked
   818  00013E  6FAF               	movwf	??_main& (0+255),b
   819  000140  0E00               	movlw	0
   820  000142  0100               	movlb	0	; () banked
   821  000144  0100               	movlb	0	; () banked
   822  000146  6FB1               	movwf	main@KeyEvent& (0+255),b
   823  000148  0100               	movlb	0	; () banked
   824  00014A  51AF               	movf	??_main& (0+255),w,b
   825                           
   826                           ; BSR set to: 0
   827                           ;main.c: 118: _delay((unsigned long)((10)*(64000000/4000.0)));
   828  00014C  0ED0               	movlw	208
   829  00014E  0100               	movlb	0	; () banked
   830  000150  6FAF               	movwf	??_main& (0+255),b
   831  000152  0ECA               	movlw	202
   832  000154                     u1477:
   833  000154  2EE8               	decfsz	wreg,f,c
   834  000156  D7FE               	goto	u1477
   835  000158  2FAF               	decfsz	??_main& (0+255),f,b
   836  00015A  D7FC               	goto	u1477
   837                           
   838                           ;main.c: 125: ConfigureInterrupts();
   839  00015C  ECA1  F005         	call	_ConfigureInterrupts	;wreg free
   840                           
   841                           ;main.c: 127: AutotestResult = SystemTest();
   842  000160  EC87  F006         	call	_SystemTest	;wreg free
   843  000164  0100               	movlb	0	; () banked
   844  000166  0100               	movlb	0	; () banked
   845  000168  6FB2               	movwf	main@AutotestResult& (0+255),b
   846                           
   847                           ; BSR set to: 0
   848                           ;main.c: 133: PutMotorOrder(0,2);
   849  00016A  0100               	movlb	0	; () banked
   850  00016C  6FAF               	movwf	??_main& (0+255),b
   851  00016E  0E02               	movlw	2
   852  000170  0100               	movlb	0	; () banked
   853  000172  0100               	movlb	0	; () banked
   854  000174  6FA5               	movwf	PutMotorOrder@direction& (0+255),b
   855  000176  0100               	movlb	0	; () banked
   856  000178  51AF               	movf	??_main& (0+255),w,b
   857  00017A  0E00               	movlw	0
   858  00017C  EC69  F003         	call	_PutMotorOrder
   859  000180                     l1861:
   860                           
   861                           ;main.c: 139: {
   862                           ;main.c: 153: if(msTickCounter==1)
   863  000180  0100               	movlb	0	; () banked
   864  000182  0100               	movlb	0	; () banked
   865  000184  05A4               	decf	_msTickCounter& (0+255),w,b
   866  000186  A4D8               	btfss	status,2,c
   867  000188  D7FB               	goto	l1861
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 154: {
   871                           ;main.c: 155: MotorMeanComputation();
   872  00018A  EC02  F002         	call	_MotorMeanComputation	;wreg free
   873                           
   874                           ;main.c: 156: msTickCounter=0;
   875  00018E  0100               	movlb	0	; () banked
   876  000190  6FAF               	movwf	??_main& (0+255),b
   877  000192  0E00               	movlw	0
   878  000194  0100               	movlb	0	; () banked
   879  000196  0100               	movlb	0	; () banked
   880  000198  6FA4               	movwf	_msTickCounter& (0+255),b
   881  00019A  0100               	movlb	0	; () banked
   882  00019C  51AF               	movf	??_main& (0+255),w,b
   883                           
   884                           ; BSR set to: 0
   885                           ;main.c: 159: ThrottlePosition=GetThrotle();
   886  00019E  ECF8  F003         	call	_GetThrotle	;wreg free
   887  0001A2  0100               	movlb	0	; () banked
   888  0001A4  0100               	movlb	0	; () banked
   889  0001A6  6FB4               	movwf	main@ThrottlePosition& (0+255),b
   890                           
   891                           ; BSR set to: 0
   892                           ;main.c: 162: if(GetKeyCode()==0b00000000 && OrderLocked==0)
   893  0001A8  EC73  F006         	call	_GetKeyCode	;wreg free
   894  0001AC  0900               	iorlw	0
   895  0001AE  A4D8               	btfss	status,2,c
   896  0001B0  D00E               	goto	l1877
   897  0001B2  0100               	movlb	0	; () banked
   898  0001B4  0100               	movlb	0	; () banked
   899  0001B6  67B3               	tstfsz	main@OrderLocked& (0+255),b
   900  0001B8  D00A               	goto	l1877
   901                           
   902                           ; BSR set to: 0
   903                           ;main.c: 163: {
   904                           ;main.c: 164: UserOrder.PowerValue=ThrottlePosition;
   905  0001BA  C0B4  F0A2         	movff	main@ThrottlePosition,_UserOrder
   906                           
   907                           ; BSR set to: 0
   908                           ;main.c: 165: UserOrder.direction=1;
   909  0001BE  0100               	movlb	0	; () banked
   910  0001C0  6FAF               	movwf	??_main& (0+255),b
   911  0001C2  0E01               	movlw	1
   912  0001C4  0100               	movlb	0	; () banked
   913  0001C6  0100               	movlb	0	; () banked
   914  0001C8  6FA3               	movwf	(_UserOrder+1)& (0+255),b
   915  0001CA  0100               	movlb	0	; () banked
   916  0001CC  51AF               	movf	??_main& (0+255),w,b
   917  0001CE                     l1877:
   918                           
   919                           ;main.c: 166: }
   920                           ;main.c: 170: if(OrderLocked==1 && ThrottlePosition<25)
   921  0001CE  0100               	movlb	0	; () banked
   922  0001D0  0100               	movlb	0	; () banked
   923  0001D2  05B3               	decf	main@OrderLocked& (0+255),w,b
   924  0001D4  A4D8               	btfss	status,2,c
   925  0001D6  D018               	goto	l1885
   926                           
   927                           ; BSR set to: 0
   928  0001D8  0E19               	movlw	25
   929  0001DA  0100               	movlb	0	; () banked
   930  0001DC  0100               	movlb	0	; () banked
   931  0001DE  5DB4               	subwf	main@ThrottlePosition& (0+255),w,b
   932  0001E0  B0D8               	btfsc	status,0,c
   933  0001E2  D012               	goto	l1885
   934                           
   935                           ; BSR set to: 0
   936                           ;main.c: 171: {
   937                           ;main.c: 172: UserOrder.PowerValue=ThrottlePosition;
   938  0001E4  C0B4  F0A2         	movff	main@ThrottlePosition,_UserOrder
   939                           
   940                           ; BSR set to: 0
   941                           ;main.c: 173: UserOrder.direction=1;
   942  0001E8  0100               	movlb	0	; () banked
   943  0001EA  6FAF               	movwf	??_main& (0+255),b
   944  0001EC  0E01               	movlw	1
   945  0001EE  0100               	movlb	0	; () banked
   946  0001F0  0100               	movlb	0	; () banked
   947  0001F2  6FA3               	movwf	(_UserOrder+1)& (0+255),b
   948  0001F4  0100               	movlb	0	; () banked
   949  0001F6  51AF               	movf	??_main& (0+255),w,b
   950                           
   951                           ;main.c: 174: OrderLocked=0;
   952  0001F8  0100               	movlb	0	; () banked
   953  0001FA  6FAF               	movwf	??_main& (0+255),b
   954  0001FC  0E00               	movlw	0
   955  0001FE  0100               	movlb	0	; () banked
   956  000200  0100               	movlb	0	; () banked
   957  000202  6FB3               	movwf	main@OrderLocked& (0+255),b
   958  000204  0100               	movlb	0	; () banked
   959  000206  51AF               	movf	??_main& (0+255),w,b
   960  000208                     l1885:
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 175: }
   964                           ;main.c: 178: if(GetKeyCode()==0b00100000 && (UserOrder.direction==0 || UserOrder.PowerV
      +                          alue==0))
   965  000208  EC73  F006         	call	_GetKeyCode	;wreg free
   966  00020C  0A20               	xorlw	32
   967  00020E  A4D8               	btfss	status,2,c
   968  000210  D019               	goto	l1893
   969  000212  0100               	movlb	0	; () banked
   970  000214  0100               	movlb	0	; () banked
   971  000216  51A3               	movf	(_UserOrder+1)& (0+255),w,b
   972  000218  B4D8               	btfsc	status,2,c
   973  00021A  D004               	goto	l1891
   974                           
   975                           ; BSR set to: 0
   976  00021C  0100               	movlb	0	; () banked
   977  00021E  0100               	movlb	0	; () banked
   978  000220  67A2               	tstfsz	_UserOrder& (0+255),b
   979  000222  D010               	goto	l1893
   980  000224                     l1891:
   981                           
   982                           ; BSR set to: 0
   983                           ;main.c: 179: {
   984                           ;main.c: 180: UserOrder.PowerValue=50;
   985  000224  0100               	movlb	0	; () banked
   986  000226  6FAF               	movwf	??_main& (0+255),b
   987  000228  0E32               	movlw	50
   988  00022A  0100               	movlb	0	; () banked
   989  00022C  0100               	movlb	0	; () banked
   990  00022E  6FA2               	movwf	_UserOrder& (0+255),b
   991  000230  0100               	movlb	0	; () banked
   992  000232  51AF               	movf	??_main& (0+255),w,b
   993                           
   994                           ;main.c: 181: UserOrder.direction=0;
   995  000234  0100               	movlb	0	; () banked
   996  000236  6FAF               	movwf	??_main& (0+255),b
   997  000238  0E00               	movlw	0
   998  00023A  0100               	movlb	0	; () banked
   999  00023C  0100               	movlb	0	; () banked
  1000  00023E  6FA3               	movwf	(_UserOrder+1)& (0+255),b
  1001  000240  0100               	movlb	0	; () banked
  1002  000242  51AF               	movf	??_main& (0+255),w,b
  1003  000244                     l1893:
  1004                           
  1005                           ;main.c: 182: }
  1006                           ;main.c: 185: if(GetKeyCode()==0b00100000 && OrderLocked==0 &&(UserOrder.direction==1 ||
      +                           UserOrder.PowerValue>25))
  1007  000244  EC73  F006         	call	_GetKeyCode	;wreg free
  1008  000248  0A20               	xorlw	32
  1009  00024A  A4D8               	btfss	status,2,c
  1010  00024C  D799               	goto	l1861
  1011  00024E  0100               	movlb	0	; () banked
  1012  000250  0100               	movlb	0	; () banked
  1013  000252  67B3               	tstfsz	main@OrderLocked& (0+255),b
  1014  000254  D795               	goto	l1861
  1015                           
  1016                           ; BSR set to: 0
  1017  000256  0100               	movlb	0	; () banked
  1018  000258  0100               	movlb	0	; () banked
  1019  00025A  05A3               	decf	(_UserOrder+1)& (0+255),w,b
  1020  00025C  B4D8               	btfsc	status,2,c
  1021  00025E  D005               	goto	l1901
  1022                           
  1023                           ; BSR set to: 0
  1024  000260  0E19               	movlw	25
  1025  000262  0100               	movlb	0	; () banked
  1026  000264  0100               	movlb	0	; () banked
  1027  000266  65A2               	cpfsgt	_UserOrder& (0+255),b
  1028  000268  D78B               	goto	l1861
  1029  00026A                     l1901:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;main.c: 186: {
  1033                           ;main.c: 187: OrderLocked=1;
  1034  00026A  0100               	movlb	0	; () banked
  1035  00026C  6FAF               	movwf	??_main& (0+255),b
  1036  00026E  0E01               	movlw	1
  1037  000270  0100               	movlb	0	; () banked
  1038  000272  0100               	movlb	0	; () banked
  1039  000274  6FB3               	movwf	main@OrderLocked& (0+255),b
  1040  000276  0100               	movlb	0	; () banked
  1041  000278  51AF               	movf	??_main& (0+255),w,b
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;main.c: 188: UserOrder.PowerValue=ThrottlePosition;
  1045  00027A  C0B4  F0A2         	movff	main@ThrottlePosition,_UserOrder
  1046                           
  1047                           ;main.c: 189: UserOrder.direction=1;
  1048  00027E  0100               	movlb	0	; () banked
  1049  000280  6FAF               	movwf	??_main& (0+255),b
  1050  000282  0E01               	movlw	1
  1051  000284  0100               	movlb	0	; () banked
  1052  000286  0100               	movlb	0	; () banked
  1053  000288  6FA3               	movwf	(_UserOrder+1)& (0+255),b
  1054  00028A  0100               	movlb	0	; () banked
  1055  00028C  51AF               	movf	??_main& (0+255),w,b
  1056  00028E  D778               	goto	l1861
  1057  000290                     __end_of_main:
  1058                           	opt stack 0
  1059                           pclatu	equ	0xFFB
  1060                           pclath	equ	0xFFA
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           prodh	equ	0xFF4
  1066                           prodl	equ	0xFF3
  1067                           intcon	equ	0xFF2
  1068                           postinc0	equ	0xFEE
  1069                           fsr0h	equ	0xFEA
  1070                           fsr0l	equ	0xFE9
  1071                           wreg	equ	0xFE8
  1072                           fsr1h	equ	0xFE2
  1073                           fsr1l	equ	0xFE1
  1074                           bsr	equ	0xFE0
  1075                           fsr2h	equ	0xFDA
  1076                           fsr2l	equ	0xFD9
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _SystemTest *****************
  1080 ;; Defined at:
  1081 ;;		line 210 in file "system.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      unsigned char 
  1088 ;; Registers used:
  1089 ;;		wreg
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    4
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text1
  1110  000D0E                     __ptext1:
  1111                           	opt stack 0
  1112  000D0E                     _SystemTest:
  1113                           	opt stack 25
  1114                           
  1115                           ;system.c: 212: return 1;
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;incstack = 0
  1119  000D0E  0E01               	movlw	1
  1120  000D10  0012               	return	
  1121  000D12                     __end_of_SystemTest:
  1122                           	opt stack 0
  1123                           pclatu	equ	0xFFB
  1124                           pclath	equ	0xFFA
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           prodh	equ	0xFF4
  1130                           prodl	equ	0xFF3
  1131                           intcon	equ	0xFF2
  1132                           postinc0	equ	0xFEE
  1133                           fsr0h	equ	0xFEA
  1134                           fsr0l	equ	0xFE9
  1135                           wreg	equ	0xFE8
  1136                           fsr1h	equ	0xFE2
  1137                           fsr1l	equ	0xFE1
  1138                           bsr	equ	0xFE0
  1139                           fsr2h	equ	0xFDA
  1140                           fsr2l	equ	0xFD9
  1141                           status	equ	0xFD8
  1142                           
  1143 ;; *************** function _PutMotorOrder *****************
  1144 ;; Defined at:
  1145 ;;		line 84 in file "motor.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  value           1    wreg     unsigned char 
  1148 ;;  direction       1    0[BANK0 ] unsigned char 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  value           1    3[BANK0 ] unsigned char 
  1151 ;;  temp            1    2[BANK0 ] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;		None               void
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1161 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1162 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1163 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1164 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1165 ;;Total ram usage:        4 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    4
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text2
  1176  0006D2                     __ptext2:
  1177                           	opt stack 0
  1178  0006D2                     _PutMotorOrder:
  1179                           	opt stack 25
  1180                           
  1181                           ;incstack = 0
  1182                           ;PutMotorOrder@value stored from wreg
  1183  0006D2  CFE8 F0A8          	movff	wreg,PutMotorOrder@value
  1184                           
  1185                           ;motor.c: 86: char temp=0;
  1186  0006D6  0100               	movlb	0	; () banked
  1187  0006D8  6FA6               	movwf	??_PutMotorOrder& (0+255),b
  1188  0006DA  0E00               	movlw	0
  1189  0006DC  0100               	movlb	0	; () banked
  1190  0006DE  0100               	movlb	0	; () banked
  1191  0006E0  6FA7               	movwf	PutMotorOrder@temp& (0+255),b
  1192  0006E2  0100               	movlb	0	; () banked
  1193  0006E4  51A6               	movf	??_PutMotorOrder& (0+255),w,b
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;motor.c: 88: CCPR2L=value>>1;
  1197  0006E6  0100               	movlb	0	; () banked
  1198  0006E8  0100               	movlb	0	; () banked
  1199  0006EA  90D8               	bcf	status,0,c
  1200  0006EC  31A8               	rrcf	PutMotorOrder@value& (0+255),w,b
  1201  0006EE  010F               	movlb	15	; () banked
  1202  0006F0  010F               	movlb	15	; () banked
  1203  0006F2  6F51               	movwf	81,b	;volatile
  1204                           
  1205                           ; BSR set to: 15
  1206                           ;motor.c: 89: CCPR3L=value>>1;
  1207  0006F4  0100               	movlb	0	; () banked
  1208  0006F6  0100               	movlb	0	; () banked
  1209  0006F8  90D8               	bcf	status,0,c
  1210  0006FA  31A8               	rrcf	PutMotorOrder@value& (0+255),w,b
  1211  0006FC  010F               	movlb	15	; () banked
  1212  0006FE  010F               	movlb	15	; () banked
  1213  000700  6F4E               	movwf	78,b	;volatile
  1214                           
  1215                           ; BSR set to: 15
  1216                           ;motor.c: 91: if((value & 0x01)==1)
  1217  000702  0100               	movlb	0	; () banked
  1218  000704  0100               	movlb	0	; () banked
  1219  000706  A1A8               	btfss	PutMotorOrder@value& (0+255),0,b
  1220  000708  D00E               	goto	l2013
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;motor.c: 92: {
  1224                           ;motor.c: 93: CCP2CONbits.DC2B=0b10;
  1225  00070A  010F               	movlb	15	; () banked
  1226  00070C  010F               	movlb	15	; () banked
  1227  00070E  5150               	movf	80,w,b	;volatile
  1228  000710  0BCF               	andlw	-49
  1229  000712  0920               	iorlw	32
  1230  000714  010F               	movlb	15	; () banked
  1231  000716  6F50               	movwf	80,b	;volatile
  1232                           
  1233                           ;motor.c: 94: CCP3CONbits.DC3B=0b10;
  1234  000718  010F               	movlb	15	; () banked
  1235  00071A  010F               	movlb	15	; () banked
  1236  00071C  514D               	movf	77,w,b	;volatile
  1237  00071E  0BCF               	andlw	-49
  1238  000720  0920               	iorlw	32
  1239  000722  010F               	movlb	15	; () banked
  1240  000724  6F4D               	movwf	77,b	;volatile
  1241  000726                     l2013:
  1242                           
  1243                           ;motor.c: 95: }
  1244                           ;motor.c: 96: if((value & 0x01)==0)
  1245  000726  0100               	movlb	0	; () banked
  1246  000728  0100               	movlb	0	; () banked
  1247  00072A  B1A8               	btfsc	PutMotorOrder@value& (0+255),0,b
  1248  00072C  D00B               	goto	l2017
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;motor.c: 97: {
  1252                           ;motor.c: 98: CCP2CONbits.DC2B=0b00;
  1253  00072E  0ECF               	movlw	-49
  1254  000730  010F               	movlb	15	; () banked
  1255  000732  010F               	movlb	15	; () banked
  1256  000734  1750               	andwf	80,f,b	;volatile
  1257                           
  1258                           ;motor.c: 99: CCP3CONbits.DC3B=0b10;
  1259  000736  010F               	movlb	15	; () banked
  1260  000738  010F               	movlb	15	; () banked
  1261  00073A  514D               	movf	77,w,b	;volatile
  1262  00073C  0BCF               	andlw	-49
  1263  00073E  0920               	iorlw	32
  1264  000740  010F               	movlb	15	; () banked
  1265  000742  6F4D               	movwf	77,b	;volatile
  1266  000744                     l2017:
  1267                           
  1268                           ;motor.c: 100: }
  1269                           ;motor.c: 103: if(direction==1)
  1270  000744  0100               	movlb	0	; () banked
  1271  000746  0100               	movlb	0	; () banked
  1272  000748  05A5               	decf	PutMotorOrder@direction& (0+255),w,b
  1273  00074A  A4D8               	btfss	status,2,c
  1274  00074C  D01C               	goto	l2037
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;motor.c: 104: {
  1278                           ;motor.c: 105: LATDbits.LATD4=0;
  1279  00074E  988C               	bcf	3980,4,c	;volatile
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;motor.c: 106: CCP2CON = 0;
  1283  000750  0E00               	movlw	0
  1284  000752  010F               	movlb	15	; () banked
  1285  000754  010F               	movlb	15	; () banked
  1286  000756  6F50               	movwf	80,b	;volatile
  1287                           
  1288                           ; BSR set to: 15
  1289                           ;motor.c: 108: LATCbits.LATC2=0;
  1290  000758  948B               	bcf	3979,2,c	;volatile
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;motor.c: 109: LATDbits.LATD3=1;
  1294  00075A  868C               	bsf	3980,3,c	;volatile
  1295                           
  1296                           ; BSR set to: 15
  1297                           ;motor.c: 111: if(value!=100)
  1298  00075C  0100               	movlb	0	; () banked
  1299  00075E  0100               	movlb	0	; () banked
  1300  000760  51A8               	movf	PutMotorOrder@value& (0+255),w,b
  1301  000762  0A64               	xorlw	100
  1302  000764  B4D8               	btfsc	status,2,c
  1303  000766  D004               	goto	l2031
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;motor.c: 112: {
  1307                           ;motor.c: 113: CCP3CON = 0x0F;
  1308  000768  0E0F               	movlw	15
  1309  00076A  010F               	movlb	15	; () banked
  1310  00076C  010F               	movlb	15	; () banked
  1311  00076E  6F4D               	movwf	77,b	;volatile
  1312  000770                     l2031:
  1313                           
  1314                           ;motor.c: 114: }
  1315                           ;motor.c: 115: if(value==100)
  1316  000770  0100               	movlb	0	; () banked
  1317  000772  0100               	movlb	0	; () banked
  1318  000774  51A8               	movf	PutMotorOrder@value& (0+255),w,b
  1319  000776  0A64               	xorlw	100
  1320  000778  A4D8               	btfss	status,2,c
  1321  00077A  D005               	goto	l2037
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;motor.c: 116: {
  1325                           ;motor.c: 117: CCP3CON = 0;
  1326  00077C  0E00               	movlw	0
  1327  00077E  010F               	movlb	15	; () banked
  1328  000780  010F               	movlb	15	; () banked
  1329  000782  6F4D               	movwf	77,b	;volatile
  1330                           
  1331                           ; BSR set to: 15
  1332                           ;motor.c: 118: LATCbits.LATC6=1;
  1333  000784  8C8B               	bsf	3979,6,c	;volatile
  1334  000786                     l2037:
  1335                           
  1336                           ;motor.c: 120: }
  1337                           ;motor.c: 121: }
  1338                           ;motor.c: 123: if(direction==0)
  1339  000786  0100               	movlb	0	; () banked
  1340  000788  0100               	movlb	0	; () banked
  1341  00078A  67A5               	tstfsz	PutMotorOrder@direction& (0+255),b
  1342  00078C  D01C               	goto	l2057
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;motor.c: 124: {
  1346                           ;motor.c: 125: LATDbits.LATD3=0;
  1347  00078E  968C               	bcf	3980,3,c	;volatile
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;motor.c: 126: CCP3CON = 0;
  1351  000790  0E00               	movlw	0
  1352  000792  010F               	movlb	15	; () banked
  1353  000794  010F               	movlb	15	; () banked
  1354  000796  6F4D               	movwf	77,b	;volatile
  1355                           
  1356                           ; BSR set to: 15
  1357                           ;motor.c: 128: LATCbits.LATC6=0;
  1358  000798  9C8B               	bcf	3979,6,c	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;motor.c: 129: LATDbits.LATD4=1;
  1362  00079A  888C               	bsf	3980,4,c	;volatile
  1363                           
  1364                           ; BSR set to: 15
  1365                           ;motor.c: 131: if(value!=100)
  1366  00079C  0100               	movlb	0	; () banked
  1367  00079E  0100               	movlb	0	; () banked
  1368  0007A0  51A8               	movf	PutMotorOrder@value& (0+255),w,b
  1369  0007A2  0A64               	xorlw	100
  1370  0007A4  B4D8               	btfsc	status,2,c
  1371  0007A6  D004               	goto	l2051
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;motor.c: 132: {
  1375                           ;motor.c: 133: CCP2CON = 0x0F;
  1376  0007A8  0E0F               	movlw	15
  1377  0007AA  010F               	movlb	15	; () banked
  1378  0007AC  010F               	movlb	15	; () banked
  1379  0007AE  6F50               	movwf	80,b	;volatile
  1380  0007B0                     l2051:
  1381                           
  1382                           ;motor.c: 134: }
  1383                           ;motor.c: 136: if(value==100)
  1384  0007B0  0100               	movlb	0	; () banked
  1385  0007B2  0100               	movlb	0	; () banked
  1386  0007B4  51A8               	movf	PutMotorOrder@value& (0+255),w,b
  1387  0007B6  0A64               	xorlw	100
  1388  0007B8  A4D8               	btfss	status,2,c
  1389  0007BA  D005               	goto	l2057
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;motor.c: 137: {
  1393                           ;motor.c: 138: CCP2CON = 0;
  1394  0007BC  0E00               	movlw	0
  1395  0007BE  010F               	movlb	15	; () banked
  1396  0007C0  010F               	movlb	15	; () banked
  1397  0007C2  6F50               	movwf	80,b	;volatile
  1398                           
  1399                           ; BSR set to: 15
  1400                           ;motor.c: 139: LATCbits.LATC2=1;
  1401  0007C4  848B               	bsf	3979,2,c	;volatile
  1402  0007C6                     l2057:
  1403                           
  1404                           ;motor.c: 140: }
  1405                           ;motor.c: 141: }
  1406                           ;motor.c: 143: if(direction==2 || value==0)
  1407  0007C6  0100               	movlb	0	; () banked
  1408  0007C8  0100               	movlb	0	; () banked
  1409  0007CA  51A5               	movf	PutMotorOrder@direction& (0+255),w,b
  1410  0007CC  0A02               	xorlw	2
  1411  0007CE  B4D8               	btfsc	status,2,c
  1412  0007D0  D004               	goto	l482
  1413                           
  1414                           ; BSR set to: 0
  1415  0007D2  0100               	movlb	0	; () banked
  1416  0007D4  0100               	movlb	0	; () banked
  1417  0007D6  67A8               	tstfsz	PutMotorOrder@value& (0+255),b
  1418  0007D8  0012               	return	
  1419  0007DA                     l482:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;motor.c: 144: {
  1423                           ;motor.c: 145: LATDbits.LATD3=0;
  1424  0007DA  968C               	bcf	3980,3,c	;volatile
  1425                           
  1426                           ;motor.c: 146: LATDbits.LATD4=0;
  1427  0007DC  988C               	bcf	3980,4,c	;volatile
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;motor.c: 147: CCP2CON=0;
  1431  0007DE  0E00               	movlw	0
  1432  0007E0  010F               	movlb	15	; () banked
  1433  0007E2  010F               	movlb	15	; () banked
  1434  0007E4  6F50               	movwf	80,b	;volatile
  1435                           
  1436                           ;motor.c: 148: CCP3CON=0;
  1437  0007E6  0E00               	movlw	0
  1438  0007E8  010F               	movlb	15	; () banked
  1439  0007EA  010F               	movlb	15	; () banked
  1440  0007EC  6F4D               	movwf	77,b	;volatile
  1441  0007EE  0012               	return	
  1442  0007F0                     __end_of_PutMotorOrder:
  1443                           	opt stack 0
  1444                           pclatu	equ	0xFFB
  1445                           pclath	equ	0xFFA
  1446                           tblptru	equ	0xFF8
  1447                           tblptrh	equ	0xFF7
  1448                           tblptrl	equ	0xFF6
  1449                           tablat	equ	0xFF5
  1450                           prodh	equ	0xFF4
  1451                           prodl	equ	0xFF3
  1452                           intcon	equ	0xFF2
  1453                           postinc0	equ	0xFEE
  1454                           fsr0h	equ	0xFEA
  1455                           fsr0l	equ	0xFE9
  1456                           wreg	equ	0xFE8
  1457                           fsr1h	equ	0xFE2
  1458                           fsr1l	equ	0xFE1
  1459                           bsr	equ	0xFE0
  1460                           fsr2h	equ	0xFDA
  1461                           fsr2l	equ	0xFD9
  1462                           status	equ	0xFD8
  1463                           
  1464 ;; *************** function _MotorMeanComputation *****************
  1465 ;; Defined at:
  1466 ;;		line 44 in file "motor.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  i               1    7[BANK0 ] unsigned char 
  1471 ;;  i               1    8[BANK0 ] unsigned char 
  1472 ;;  value           2    4[BANK0 ] unsigned int 
  1473 ;;  LocalPowerVa    1    6[BANK0 ] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;		None               void
  1476 ;; Registers used:
  1477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1484 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1485 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1486 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1487 ;;Total ram usage:        9 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    4
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text3
  1498  000404                     __ptext3:
  1499                           	opt stack 0
  1500  000404                     _MotorMeanComputation:
  1501                           	opt stack 25
  1502                           
  1503                           ;motor.c: 46: unsigned int value=0;
  1504                           
  1505                           ;incstack = 0
  1506  000404  0E00               	movlw	0
  1507  000406  0100               	movlb	0	; () banked
  1508  000408  0100               	movlb	0	; () banked
  1509  00040A  6FAA               	movwf	(MotorMeanComputation@value+1)& (0+255),b
  1510  00040C  0E00               	movlw	0
  1511  00040E  0100               	movlb	0	; () banked
  1512  000410  6FA9               	movwf	MotorMeanComputation@value& (0+255),b
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;motor.c: 47: unsigned char LocalPowerValue;
  1516                           ;motor.c: 50: LocalPowerValue = UserOrder.PowerValue;
  1517  000412  C0A2  F0AB         	movff	_UserOrder,MotorMeanComputation@LocalPowerValue
  1518                           
  1519                           ;motor.c: 53: if(UserOrder.direction!=MotorOrder.direction)
  1520  000416  0100               	movlb	0	; () banked
  1521  000418  0100               	movlb	0	; () banked
  1522  00041A  51A3               	movf	(_UserOrder+1)& (0+255),w,b
  1523  00041C  0100               	movlb	0	; () banked
  1524  00041E  0100               	movlb	0	; () banked
  1525  000420  19A1               	xorwf	(_MotorOrder+1)& (0+255),w,b
  1526  000422  B4D8               	btfsc	status,2,c
  1527  000424  D008               	goto	l2069
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;motor.c: 54: {
  1531                           ;motor.c: 55: LocalPowerValue=0;
  1532  000426  0100               	movlb	0	; () banked
  1533  000428  6FA5               	movwf	??_MotorMeanComputation& (0+255),b
  1534  00042A  0E00               	movlw	0
  1535  00042C  0100               	movlb	0	; () banked
  1536  00042E  0100               	movlb	0	; () banked
  1537  000430  6FAB               	movwf	MotorMeanComputation@LocalPowerValue& (0+255),b
  1538  000432  0100               	movlb	0	; () banked
  1539  000434  51A5               	movf	??_MotorMeanComputation& (0+255),w,b
  1540  000436                     l2069:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;motor.c: 56: }
  1544                           ;motor.c: 58: if(UserOrder.direction!=MotorOrder.direction && MotorOrder.PowerValue<10)
  1545  000436  0100               	movlb	0	; () banked
  1546  000438  0100               	movlb	0	; () banked
  1547  00043A  51A3               	movf	(_UserOrder+1)& (0+255),w,b
  1548  00043C  0100               	movlb	0	; () banked
  1549  00043E  0100               	movlb	0	; () banked
  1550  000440  19A1               	xorwf	(_MotorOrder+1)& (0+255),w,b
  1551  000442  B4D8               	btfsc	status,2,c
  1552  000444  D007               	goto	l2075
  1553                           
  1554                           ; BSR set to: 0
  1555  000446  0E0A               	movlw	10
  1556  000448  0100               	movlb	0	; () banked
  1557  00044A  0100               	movlb	0	; () banked
  1558  00044C  5DA0               	subwf	_MotorOrder& (0+255),w,b
  1559  00044E  A0D8               	btfss	status,0,c
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;motor.c: 59: {
  1563                           ;motor.c: 60: MotorOrder.direction = UserOrder.direction;
  1564  000450  C0A3  F0A1         	movff	_UserOrder+1,_MotorOrder+1
  1565  000454                     l2075:
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;motor.c: 61: }
  1569                           ;motor.c: 64: for(char i=1; i<sizeof TempMotorOrdertable;i++)
  1570  000454  0100               	movlb	0	; () banked
  1571  000456  6FA5               	movwf	??_MotorMeanComputation& (0+255),b
  1572  000458  0E01               	movlw	1
  1573  00045A  0100               	movlb	0	; () banked
  1574  00045C  0100               	movlb	0	; () banked
  1575  00045E  6FAD               	movwf	MotorMeanComputation@i& (0+255),b
  1576  000460  0100               	movlb	0	; () banked
  1577  000462  51A5               	movf	??_MotorMeanComputation& (0+255),w,b
  1578  000464  D03E               	goto	L1
  1579  000466                     l2081:
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;motor.c: 65: {
  1583                           ;motor.c: 66: TempMotorOrdertable[(sizeof TempMotorOrdertable)-i]=TempMotorOrdertable[(s
      +                          izeof TempMotorOrdertable)-i-1];
  1584  000466  0100               	movlb	0	; () banked
  1585  000468  0100               	movlb	0	; () banked
  1586  00046A  51AD               	movf	MotorMeanComputation@i& (0+255),w,b
  1587  00046C  0100               	movlb	0	; () banked
  1588  00046E  6FA5               	movwf	??_MotorMeanComputation& (0+255),b
  1589  000470  6BA6               	clrf	(??_MotorMeanComputation+1)& (0+255),b
  1590  000472  0E01               	movlw	1
  1591  000474  0100               	movlb	0	; () banked
  1592  000476  27A5               	addwf	??_MotorMeanComputation& (0+255),f,b
  1593  000478  0E00               	movlw	0
  1594  00047A  23A6               	addwfc	(??_MotorMeanComputation+1)& (0+255),f,b
  1595  00047C  0100               	movlb	0	; () banked
  1596  00047E  1FA5               	comf	??_MotorMeanComputation& (0+255),f,b
  1597  000480  1FA6               	comf	(??_MotorMeanComputation+1)& (0+255),f,b
  1598  000482  4BA5               	infsnz	??_MotorMeanComputation& (0+255),f,b
  1599  000484  2BA6               	incf	(??_MotorMeanComputation+1)& (0+255),f,b
  1600  000486  0E40               	movlw	64
  1601  000488  0100               	movlb	0	; () banked
  1602  00048A  27A5               	addwf	??_MotorMeanComputation& (0+255),f,b
  1603  00048C  0E00               	movlw	0
  1604  00048E  23A6               	addwfc	(??_MotorMeanComputation+1)& (0+255),f,b
  1605  000490  0100               	movlb	0	; () banked
  1606  000492  0E60               	movlw	low _TempMotorOrdertable
  1607  000494  0100               	movlb	0	; () banked
  1608  000496  25A5               	addwf	??_MotorMeanComputation& (0+255),w,b
  1609  000498  6ED9               	movwf	fsr2l,c
  1610  00049A  0100               	movlb	0	; () banked
  1611  00049C  0E00               	movlw	high _TempMotorOrdertable
  1612  00049E  0100               	movlb	0	; () banked
  1613  0004A0  21A6               	addwfc	(??_MotorMeanComputation+1)& (0+255),w,b
  1614  0004A2  6EDA               	movwf	fsr2h,c
  1615  0004A4  0100               	movlb	0	; () banked
  1616  0004A6  0100               	movlb	0	; () banked
  1617  0004A8  51AD               	movf	MotorMeanComputation@i& (0+255),w,b
  1618  0004AA  0100               	movlb	0	; () banked
  1619  0004AC  6FA7               	movwf	(??_MotorMeanComputation+2)& (0+255),b
  1620  0004AE  6BA8               	clrf	(??_MotorMeanComputation+3)& (0+255),b
  1621  0004B0  0100               	movlb	0	; () banked
  1622  0004B2  1FA7               	comf	(??_MotorMeanComputation+2)& (0+255),f,b
  1623  0004B4  1FA8               	comf	(??_MotorMeanComputation+3)& (0+255),f,b
  1624  0004B6  4BA7               	infsnz	(??_MotorMeanComputation+2)& (0+255),f,b
  1625  0004B8  2BA8               	incf	(??_MotorMeanComputation+3)& (0+255),f,b
  1626  0004BA  0E40               	movlw	64
  1627  0004BC  0100               	movlb	0	; () banked
  1628  0004BE  27A7               	addwf	(??_MotorMeanComputation+2)& (0+255),f,b
  1629  0004C0  0E00               	movlw	0
  1630  0004C2  23A8               	addwfc	(??_MotorMeanComputation+3)& (0+255),f,b
  1631  0004C4  0100               	movlb	0	; () banked
  1632  0004C6  0E60               	movlw	low _TempMotorOrdertable
  1633  0004C8  0100               	movlb	0	; () banked
  1634  0004CA  25A7               	addwf	(??_MotorMeanComputation+2)& (0+255),w,b
  1635  0004CC  6EE1               	movwf	fsr1l,c
  1636  0004CE  0100               	movlb	0	; () banked
  1637  0004D0  0E00               	movlw	high _TempMotorOrdertable
  1638  0004D2  0100               	movlb	0	; () banked
  1639  0004D4  21A8               	addwfc	(??_MotorMeanComputation+3)& (0+255),w,b
  1640  0004D6  6EE2               	movwf	fsr1h,c
  1641  0004D8  CFDF FFE7          	movff	indf2,indf1
  1642                           
  1643                           ; BSR set to: 0
  1644  0004DC  0100               	movlb	0	; () banked
  1645  0004DE  0100               	movlb	0	; () banked
  1646  0004E0  2BAD               	incf	MotorMeanComputation@i& (0+255),f,b
  1647  0004E2                     L1:
  1648                           
  1649                           ; BSR set to: 0
  1650  0004E2  0E3F               	movlw	63
  1651  0004E4  0100               	movlb	0	; () banked
  1652  0004E6  0100               	movlb	0	; () banked
  1653  0004E8  65AD               	cpfsgt	MotorMeanComputation@i& (0+255),b
  1654  0004EA  D7BD               	goto	l2081
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;motor.c: 67: }
  1658                           ;motor.c: 70: TempMotorOrdertable[0]=LocalPowerValue;
  1659  0004EC  C0AB  F060         	movff	MotorMeanComputation@LocalPowerValue,_TempMotorOrdertable
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;motor.c: 73: for(char i=0; i<sizeof TempMotorOrdertable;i++)
  1663  0004F0  0100               	movlb	0	; () banked
  1664  0004F2  6FA5               	movwf	??_MotorMeanComputation& (0+255),b
  1665  0004F4  0E00               	movlw	0
  1666  0004F6  0100               	movlb	0	; () banked
  1667  0004F8  0100               	movlb	0	; () banked
  1668  0004FA  6FAC               	movwf	MotorMeanComputation@i_1665& (0+255),b
  1669  0004FC  0100               	movlb	0	; () banked
  1670  0004FE  51A5               	movf	??_MotorMeanComputation& (0+255),w,b
  1671  000500  D01A               	goto	L2
  1672  000502                     l2093:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;motor.c: 74: {
  1676                           ;motor.c: 75: value+=TempMotorOrdertable[i];
  1677  000502  0100               	movlb	0	; () banked
  1678  000504  0100               	movlb	0	; () banked
  1679  000506  51AC               	movf	MotorMeanComputation@i_1665& (0+255),w,b
  1680  000508  0D01               	mullw	1
  1681  00050A  0100               	movlb	0	; () banked
  1682  00050C  0E60               	movlw	low _TempMotorOrdertable
  1683  00050E  24F3               	addwf	prodl,w,c
  1684  000510  6ED9               	movwf	fsr2l,c
  1685  000512  0100               	movlb	0	; () banked
  1686  000514  0E00               	movlw	high _TempMotorOrdertable
  1687  000516  20F4               	addwfc	prodh,w,c
  1688  000518  6EDA               	movwf	fsr2h,c
  1689  00051A  50DF               	movf	indf2,w,c
  1690  00051C  0100               	movlb	0	; () banked
  1691  00051E  6FA5               	movwf	??_MotorMeanComputation& (0+255),b
  1692  000520  0100               	movlb	0	; () banked
  1693  000522  51A5               	movf	??_MotorMeanComputation& (0+255),w,b
  1694  000524  0100               	movlb	0	; () banked
  1695  000526  0100               	movlb	0	; () banked
  1696  000528  27A9               	addwf	MotorMeanComputation@value& (0+255),f,b
  1697  00052A  0E00               	movlw	0
  1698  00052C  0100               	movlb	0	; () banked
  1699  00052E  23AA               	addwfc	(MotorMeanComputation@value+1)& (0+255),f,b
  1700                           
  1701                           ; BSR set to: 0
  1702  000530  0100               	movlb	0	; () banked
  1703  000532  0100               	movlb	0	; () banked
  1704  000534  2BAC               	incf	MotorMeanComputation@i_1665& (0+255),f,b
  1705  000536                     L2:
  1706                           
  1707                           ; BSR set to: 0
  1708  000536  0E3F               	movlw	63
  1709  000538  0100               	movlb	0	; () banked
  1710  00053A  0100               	movlb	0	; () banked
  1711  00053C  65AC               	cpfsgt	MotorMeanComputation@i_1665& (0+255),b
  1712  00053E  D7E1               	goto	l2093
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;motor.c: 76: }
  1716                           ;motor.c: 79: MotorOrder.PowerValue=(char) (value/(sizeof TempMotorOrdertable));
  1717                           
  1718                           ; BSR set to: 0
  1719  000540  0100               	movlb	0	; () banked
  1720  000542  C0A9  F0A5         	movff	MotorMeanComputation@value,??_MotorMeanComputation
  1721  000546  0100               	movlb	0	; () banked
  1722  000548  C0AA  F0A6         	movff	MotorMeanComputation@value+1,??_MotorMeanComputation+1
  1723  00054C  0E06               	movlw	6
  1724  00054E  0100               	movlb	0	; () banked
  1725  000550  6FA7               	movwf	(??_MotorMeanComputation+2)& (0+255),b
  1726  000552                     u1255:
  1727  000552  0100               	movlb	0	; () banked
  1728  000554  90D8               	bcf	status,0,c
  1729  000556  33A6               	rrcf	(??_MotorMeanComputation+1)& (0+255),f,b
  1730  000558  33A5               	rrcf	??_MotorMeanComputation& (0+255),f,b
  1731  00055A  0100               	movlb	0	; () banked
  1732  00055C  2FA7               	decfsz	(??_MotorMeanComputation+2)& (0+255),f,b
  1733  00055E  D7F9               	goto	u1255
  1734  000560  0100               	movlb	0	; () banked
  1735  000562  51A5               	movf	??_MotorMeanComputation& (0+255),w,b
  1736  000564  0100               	movlb	0	; () banked
  1737  000566  0100               	movlb	0	; () banked
  1738  000568  6FA0               	movwf	_MotorOrder& (0+255),b
  1739                           
  1740                           ; BSR set to: 0
  1741  00056A  0012               	return	
  1742  00056C                     __end_of_MotorMeanComputation:
  1743                           	opt stack 0
  1744                           pclatu	equ	0xFFB
  1745                           pclath	equ	0xFFA
  1746                           tblptru	equ	0xFF8
  1747                           tblptrh	equ	0xFF7
  1748                           tblptrl	equ	0xFF6
  1749                           tablat	equ	0xFF5
  1750                           prodh	equ	0xFF4
  1751                           prodl	equ	0xFF3
  1752                           intcon	equ	0xFF2
  1753                           postinc0	equ	0xFEE
  1754                           fsr0h	equ	0xFEA
  1755                           fsr0l	equ	0xFE9
  1756                           wreg	equ	0xFE8
  1757                           indf1	equ	0xFE7
  1758                           fsr1h	equ	0xFE2
  1759                           fsr1l	equ	0xFE1
  1760                           bsr	equ	0xFE0
  1761                           indf2	equ	0xFDF
  1762                           fsr2h	equ	0xFDA
  1763                           fsr2l	equ	0xFD9
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _MotorInitVar *****************
  1767 ;; Defined at:
  1768 ;;		line 35 in file "motor.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  i               1    1[BANK0 ] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;		None               void
  1775 ;; Registers used:
  1776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;Total ram usage:        2 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    4
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text4
  1797  000B92                     __ptext4:
  1798                           	opt stack 0
  1799  000B92                     _MotorInitVar:
  1800                           	opt stack 25
  1801                           
  1802                           ;motor.c: 37: for (char i=0;i<sizeof TempMotorOrdertable;i++ )
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;incstack = 0
  1806  000B92  0100               	movlb	0	; () banked
  1807  000B94  6FA5               	movwf	??_MotorInitVar& (0+255),b
  1808  000B96  0E00               	movlw	0
  1809  000B98  0100               	movlb	0	; () banked
  1810  000B9A  0100               	movlb	0	; () banked
  1811  000B9C  6FA6               	movwf	MotorInitVar@i& (0+255),b
  1812  000B9E  0100               	movlb	0	; () banked
  1813  000BA0  51A5               	movf	??_MotorInitVar& (0+255),w,b
  1814                           
  1815                           ; BSR set to: 0
  1816  000BA2  0E3F               	movlw	63
  1817  000BA4  0100               	movlb	0	; () banked
  1818  000BA6  0100               	movlb	0	; () banked
  1819  000BA8  65A6               	cpfsgt	MotorInitVar@i& (0+255),b
  1820  000BAA  D001               	goto	l1977
  1821  000BAC  0012               	return	
  1822  000BAE                     l1977:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;motor.c: 38: {
  1826                           ;motor.c: 39: TempMotorOrdertable[i]=0;
  1827  000BAE  0100               	movlb	0	; () banked
  1828  000BB0  0100               	movlb	0	; () banked
  1829  000BB2  51A6               	movf	MotorInitVar@i& (0+255),w,b
  1830  000BB4  0D01               	mullw	1
  1831  000BB6  0100               	movlb	0	; () banked
  1832  000BB8  0E60               	movlw	low _TempMotorOrdertable
  1833  000BBA  24F3               	addwf	prodl,w,c
  1834  000BBC  6ED9               	movwf	fsr2l,c
  1835  000BBE  0100               	movlb	0	; () banked
  1836  000BC0  0E00               	movlw	high _TempMotorOrdertable
  1837  000BC2  20F4               	addwfc	prodh,w,c
  1838  000BC4  6EDA               	movwf	fsr2h,c
  1839  000BC6  0E00               	movlw	0
  1840  000BC8  6EDF               	movwf	indf2,c
  1841                           
  1842                           ; BSR set to: 0
  1843  000BCA  0100               	movlb	0	; () banked
  1844  000BCC  0100               	movlb	0	; () banked
  1845  000BCE  2BA6               	incf	MotorInitVar@i& (0+255),f,b
  1846                           
  1847                           ; BSR set to: 0
  1848  000BD0  0E3F               	movlw	63
  1849  000BD2  0100               	movlb	0	; () banked
  1850  000BD4  0100               	movlb	0	; () banked
  1851  000BD6  65A6               	cpfsgt	MotorInitVar@i& (0+255),b
  1852  000BD8  D7EA               	goto	l1977
  1853  000BDA  0012               	return	
  1854  000BDC                     __end_of_MotorInitVar:
  1855                           	opt stack 0
  1856                           pclatu	equ	0xFFB
  1857                           pclath	equ	0xFFA
  1858                           tblptru	equ	0xFF8
  1859                           tblptrh	equ	0xFF7
  1860                           tblptrl	equ	0xFF6
  1861                           tablat	equ	0xFF5
  1862                           prodh	equ	0xFF4
  1863                           prodl	equ	0xFF3
  1864                           intcon	equ	0xFF2
  1865                           postinc0	equ	0xFEE
  1866                           fsr0h	equ	0xFEA
  1867                           fsr0l	equ	0xFE9
  1868                           wreg	equ	0xFE8
  1869                           indf1	equ	0xFE7
  1870                           fsr1h	equ	0xFE2
  1871                           fsr1l	equ	0xFE1
  1872                           bsr	equ	0xFE0
  1873                           indf2	equ	0xFDF
  1874                           fsr2h	equ	0xFDA
  1875                           fsr2l	equ	0xFD9
  1876                           status	equ	0xFD8
  1877                           
  1878 ;; *************** function _GetThrotle *****************
  1879 ;; Defined at:
  1880 ;;		line 164 in file "system.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  adc_result      2    8[BANK0 ] unsigned int 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1897 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1898 ;;Total ram usage:        2 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    5
  1901 ;; This function calls:
  1902 ;;		___lwdiv
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text5
  1909  0007F0                     __ptext5:
  1910                           	opt stack 0
  1911  0007F0                     _GetThrotle:
  1912                           	opt stack 24
  1913                           
  1914                           ;system.c: 166: unsigned int adc_result;
  1915                           ;system.c: 168: ADCON0bits.GO=1;
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;incstack = 0
  1919  0007F0  82C2               	bsf	4034,1,c	;volatile
  1920  0007F2                     l209:
  1921  0007F2  B2C2               	btfsc	4034,1,c	;volatile
  1922  0007F4  D7FE               	goto	l209
  1923                           
  1924                           ;system.c: 170: adc_result=(ADRESH);
  1925  0007F6  0100               	movlb	0	; () banked
  1926  0007F8  CFC4 F0AD          	movff	4036,GetThrotle@adc_result	;volatile
  1927  0007FC  0100               	movlb	0	; () banked
  1928  0007FE  0100               	movlb	0	; () banked
  1929  000800  6BAE               	clrf	(GetThrotle@adc_result+1)& (0+255),b
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;system.c: 171: adc_result=adc_result<<8;
  1933  000802  0100               	movlb	0	; () banked
  1934  000804  0100               	movlb	0	; () banked
  1935  000806  51AD               	movf	GetThrotle@adc_result& (0+255),w,b
  1936  000808  0100               	movlb	0	; () banked
  1937  00080A  0100               	movlb	0	; () banked
  1938  00080C  6FAE               	movwf	(GetThrotle@adc_result+1)& (0+255),b
  1939  00080E  0100               	movlb	0	; () banked
  1940  000810  6BAD               	clrf	GetThrotle@adc_result& (0+255),b
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;system.c: 172: adc_result=adc_result | ADRESL;
  1944  000812  0100               	movlb	0	; () banked
  1945  000814  0100               	movlb	0	; () banked
  1946  000816  51AD               	movf	GetThrotle@adc_result& (0+255),w,b
  1947  000818  10C3               	iorwf	4035,w,c	;volatile
  1948  00081A  0100               	movlb	0	; () banked
  1949  00081C  0100               	movlb	0	; () banked
  1950  00081E  6FAD               	movwf	GetThrotle@adc_result& (0+255),b
  1951  000820  0100               	movlb	0	; () banked
  1952  000822  0100               	movlb	0	; () banked
  1953  000824  51AE               	movf	(GetThrotle@adc_result+1)& (0+255),w,b
  1954  000826  0100               	movlb	0	; () banked
  1955  000828  6FAE               	movwf	(GetThrotle@adc_result+1)& (0+255),b
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;system.c: 174: if(adc_result<0x297)
  1959  00082A  0E97               	movlw	151
  1960  00082C  0100               	movlb	0	; () banked
  1961  00082E  0100               	movlb	0	; () banked
  1962  000830  5DAD               	subwf	GetThrotle@adc_result& (0+255),w,b
  1963  000832  0E02               	movlw	2
  1964  000834  0100               	movlb	0	; () banked
  1965  000836  59AE               	subwfb	(GetThrotle@adc_result+1)& (0+255),w,b
  1966  000838  B0D8               	btfsc	status,0,c
  1967  00083A  D007               	goto	l2111
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;system.c: 175: {
  1971                           ;system.c: 176: adc_result=0x297;
  1972  00083C  0E02               	movlw	2
  1973  00083E  0100               	movlb	0	; () banked
  1974  000840  0100               	movlb	0	; () banked
  1975  000842  6FAE               	movwf	(GetThrotle@adc_result+1)& (0+255),b
  1976  000844  0E97               	movlw	151
  1977  000846  0100               	movlb	0	; () banked
  1978  000848  6FAD               	movwf	GetThrotle@adc_result& (0+255),b
  1979  00084A                     l2111:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;system.c: 177: }
  1983                           ;system.c: 179: if(adc_result>0x8DA)
  1984  00084A  0EDB               	movlw	219
  1985  00084C  0100               	movlb	0	; () banked
  1986  00084E  0100               	movlb	0	; () banked
  1987  000850  5DAD               	subwf	GetThrotle@adc_result& (0+255),w,b
  1988  000852  0E08               	movlw	8
  1989  000854  0100               	movlb	0	; () banked
  1990  000856  59AE               	subwfb	(GetThrotle@adc_result+1)& (0+255),w,b
  1991  000858  A0D8               	btfss	status,0,c
  1992  00085A  D007               	goto	l2115
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;system.c: 180: {
  1996                           ;system.c: 181: adc_result=0x8DA;
  1997  00085C  0E08               	movlw	8
  1998  00085E  0100               	movlb	0	; () banked
  1999  000860  0100               	movlb	0	; () banked
  2000  000862  6FAE               	movwf	(GetThrotle@adc_result+1)& (0+255),b
  2001  000864  0EDA               	movlw	218
  2002  000866  0100               	movlb	0	; () banked
  2003  000868  6FAD               	movwf	GetThrotle@adc_result& (0+255),b
  2004  00086A                     l2115:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;system.c: 182: }
  2008                           ;system.c: 184: adc_result=(adc_result-0x297)/18;
  2009  00086A  0E69               	movlw	105
  2010  00086C  0100               	movlb	0	; () banked
  2011  00086E  0100               	movlb	0	; () banked
  2012  000870  25AD               	addwf	GetThrotle@adc_result& (0+255),w,b
  2013  000872  0100               	movlb	0	; () banked
  2014  000874  0100               	movlb	0	; () banked
  2015  000876  6FA5               	movwf	___lwdiv@dividend& (0+255),b
  2016  000878  0EFD               	movlw	253
  2017  00087A  0100               	movlb	0	; () banked
  2018  00087C  0100               	movlb	0	; () banked
  2019  00087E  21AE               	addwfc	(GetThrotle@adc_result+1)& (0+255),w,b
  2020  000880  0100               	movlb	0	; () banked
  2021  000882  6FA6               	movwf	(___lwdiv@dividend+1)& (0+255),b
  2022  000884  0E00               	movlw	0
  2023  000886  0100               	movlb	0	; () banked
  2024  000888  0100               	movlb	0	; () banked
  2025  00088A  6FA8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2026  00088C  0E12               	movlw	18
  2027  00088E  0100               	movlb	0	; () banked
  2028  000890  6FA7               	movwf	___lwdiv@divisor& (0+255),b
  2029  000892  ECD0  F004         	call	___lwdiv	;wreg free
  2030  000896  0100               	movlb	0	; () banked
  2031  000898  C0A5  F0AD         	movff	?___lwdiv,GetThrotle@adc_result
  2032  00089C  0100               	movlb	0	; () banked
  2033  00089E  C0A6  F0AE         	movff	?___lwdiv+1,GetThrotle@adc_result+1
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;system.c: 186: if(adc_result<15)
  2037  0008A2  0E0F               	movlw	15
  2038  0008A4  0100               	movlb	0	; () banked
  2039  0008A6  0100               	movlb	0	; () banked
  2040  0008A8  5DAD               	subwf	GetThrotle@adc_result& (0+255),w,b
  2041  0008AA  0E00               	movlw	0
  2042  0008AC  0100               	movlb	0	; () banked
  2043  0008AE  59AE               	subwfb	(GetThrotle@adc_result+1)& (0+255),w,b
  2044  0008B0  B0D8               	btfsc	status,0,c
  2045  0008B2  D007               	goto	l2121
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;system.c: 187: adc_result=0;
  2049  0008B4  0E00               	movlw	0
  2050  0008B6  0100               	movlb	0	; () banked
  2051  0008B8  0100               	movlb	0	; () banked
  2052  0008BA  6FAE               	movwf	(GetThrotle@adc_result+1)& (0+255),b
  2053  0008BC  0E00               	movlw	0
  2054  0008BE  0100               	movlb	0	; () banked
  2055  0008C0  6FAD               	movwf	GetThrotle@adc_result& (0+255),b
  2056  0008C2                     l2121:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;system.c: 188: if(adc_result>85)
  2060  0008C2  0E56               	movlw	86
  2061  0008C4  0100               	movlb	0	; () banked
  2062  0008C6  0100               	movlb	0	; () banked
  2063  0008C8  5DAD               	subwf	GetThrotle@adc_result& (0+255),w,b
  2064  0008CA  0E00               	movlw	0
  2065  0008CC  0100               	movlb	0	; () banked
  2066  0008CE  59AE               	subwfb	(GetThrotle@adc_result+1)& (0+255),w,b
  2067  0008D0  A0D8               	btfss	status,0,c
  2068  0008D2  D007               	goto	l215
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;system.c: 189: adc_result=100;
  2072  0008D4  0E00               	movlw	0
  2073  0008D6  0100               	movlb	0	; () banked
  2074  0008D8  0100               	movlb	0	; () banked
  2075  0008DA  6FAE               	movwf	(GetThrotle@adc_result+1)& (0+255),b
  2076  0008DC  0E64               	movlw	100
  2077  0008DE  0100               	movlb	0	; () banked
  2078  0008E0  6FAD               	movwf	GetThrotle@adc_result& (0+255),b
  2079  0008E2                     l215:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;system.c: 191: return (char) adc_result;
  2083  0008E2  0100               	movlb	0	; () banked
  2084  0008E4  0100               	movlb	0	; () banked
  2085  0008E6  51AD               	movf	GetThrotle@adc_result& (0+255),w,b
  2086  0008E8  0012               	return	
  2087  0008EA                     __end_of_GetThrotle:
  2088                           	opt stack 0
  2089                           pclatu	equ	0xFFB
  2090                           pclath	equ	0xFFA
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           intcon	equ	0xFF2
  2098                           postinc0	equ	0xFEE
  2099                           fsr0h	equ	0xFEA
  2100                           fsr0l	equ	0xFE9
  2101                           wreg	equ	0xFE8
  2102                           indf1	equ	0xFE7
  2103                           fsr1h	equ	0xFE2
  2104                           fsr1l	equ	0xFE1
  2105                           bsr	equ	0xFE0
  2106                           indf2	equ	0xFDF
  2107                           fsr2h	equ	0xFDA
  2108                           fsr2l	equ	0xFD9
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function ___lwdiv *****************
  2112 ;; Defined at:
  2113 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  dividend        2    0[BANK0 ] unsigned int 
  2116 ;;  divisor         2    2[BANK0 ] unsigned int 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  quotient        2    5[BANK0 ] unsigned int 
  2119 ;;  counter         1    7[BANK0 ] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  2    0[BANK0 ] unsigned int 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2129 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2133 ;;Total ram usage:        8 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    4
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_GetThrotle
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text6
  2144  0009A0                     __ptext6:
  2145                           	opt stack 0
  2146  0009A0                     ___lwdiv:
  2147                           	opt stack 24
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;incstack = 0
  2151  0009A0  0E00               	movlw	0
  2152  0009A2  0100               	movlb	0	; () banked
  2153  0009A4  0100               	movlb	0	; () banked
  2154  0009A6  6FAB               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2155  0009A8  0E00               	movlw	0
  2156  0009AA  0100               	movlb	0	; () banked
  2157  0009AC  6FAA               	movwf	___lwdiv@quotient& (0+255),b
  2158                           
  2159                           ; BSR set to: 0
  2160  0009AE  0100               	movlb	0	; () banked
  2161  0009B0  0100               	movlb	0	; () banked
  2162  0009B2  51A8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2163  0009B4  11A7               	iorwf	___lwdiv@divisor& (0+255),w,b
  2164  0009B6  B4D8               	btfsc	status,2,c
  2165  0009B8  D043               	goto	l989
  2166                           
  2167                           ; BSR set to: 0
  2168  0009BA  0100               	movlb	0	; () banked
  2169  0009BC  6FA9               	movwf	??___lwdiv& (0+255),b
  2170  0009BE  0E01               	movlw	1
  2171  0009C0  0100               	movlb	0	; () banked
  2172  0009C2  0100               	movlb	0	; () banked
  2173  0009C4  6FAC               	movwf	___lwdiv@counter& (0+255),b
  2174  0009C6  0100               	movlb	0	; () banked
  2175  0009C8  51A9               	movf	??___lwdiv& (0+255),w,b
  2176  0009CA  D009               	goto	l2211
  2177  0009CC                     l2209:
  2178                           
  2179                           ; BSR set to: 0
  2180  0009CC  0100               	movlb	0	; () banked
  2181  0009CE  0100               	movlb	0	; () banked
  2182  0009D0  0100               	movlb	0	; () banked
  2183  0009D2  90D8               	bcf	status,0,c
  2184  0009D4  37A7               	rlcf	___lwdiv@divisor& (0+255),f,b
  2185  0009D6  37A8               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2186  0009D8  0100               	movlb	0	; () banked
  2187  0009DA  0100               	movlb	0	; () banked
  2188  0009DC  2BAC               	incf	___lwdiv@counter& (0+255),f,b
  2189  0009DE                     l2211:
  2190                           
  2191                           ; BSR set to: 0
  2192  0009DE  0100               	movlb	0	; () banked
  2193  0009E0  0100               	movlb	0	; () banked
  2194  0009E2  AFA8               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2195  0009E4  D7F3               	goto	l2209
  2196  0009E6                     l2213:
  2197                           
  2198                           ; BSR set to: 0
  2199  0009E6  0100               	movlb	0	; () banked
  2200  0009E8  0100               	movlb	0	; () banked
  2201  0009EA  0100               	movlb	0	; () banked
  2202  0009EC  90D8               	bcf	status,0,c
  2203  0009EE  37AA               	rlcf	___lwdiv@quotient& (0+255),f,b
  2204  0009F0  37AB               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2205                           
  2206                           ; BSR set to: 0
  2207  0009F2  0100               	movlb	0	; () banked
  2208  0009F4  0100               	movlb	0	; () banked
  2209  0009F6  51A7               	movf	___lwdiv@divisor& (0+255),w,b
  2210  0009F8  0100               	movlb	0	; () banked
  2211  0009FA  0100               	movlb	0	; () banked
  2212  0009FC  5DA5               	subwf	___lwdiv@dividend& (0+255),w,b
  2213  0009FE  0100               	movlb	0	; () banked
  2214  000A00  0100               	movlb	0	; () banked
  2215  000A02  51A8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2216  000A04  0100               	movlb	0	; () banked
  2217  000A06  0100               	movlb	0	; () banked
  2218  000A08  59A6               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2219  000A0A  A0D8               	btfss	status,0,c
  2220  000A0C  D00F               	goto	l2221
  2221                           
  2222                           ; BSR set to: 0
  2223  000A0E  0100               	movlb	0	; () banked
  2224  000A10  0100               	movlb	0	; () banked
  2225  000A12  51A7               	movf	___lwdiv@divisor& (0+255),w,b
  2226  000A14  0100               	movlb	0	; () banked
  2227  000A16  0100               	movlb	0	; () banked
  2228  000A18  5FA5               	subwf	___lwdiv@dividend& (0+255),f,b
  2229  000A1A  0100               	movlb	0	; () banked
  2230  000A1C  0100               	movlb	0	; () banked
  2231  000A1E  51A8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2232  000A20  0100               	movlb	0	; () banked
  2233  000A22  0100               	movlb	0	; () banked
  2234  000A24  5BA6               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2235                           
  2236                           ; BSR set to: 0
  2237  000A26  0100               	movlb	0	; () banked
  2238  000A28  0100               	movlb	0	; () banked
  2239  000A2A  81AA               	bsf	___lwdiv@quotient& (0+255),0,b
  2240  000A2C                     l2221:
  2241                           
  2242                           ; BSR set to: 0
  2243  000A2C  0100               	movlb	0	; () banked
  2244  000A2E  0100               	movlb	0	; () banked
  2245  000A30  0100               	movlb	0	; () banked
  2246  000A32  90D8               	bcf	status,0,c
  2247  000A34  33A8               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2248  000A36  33A7               	rrcf	___lwdiv@divisor& (0+255),f,b
  2249                           
  2250                           ; BSR set to: 0
  2251  000A38  0100               	movlb	0	; () banked
  2252  000A3A  0100               	movlb	0	; () banked
  2253  000A3C  2FAC               	decfsz	___lwdiv@counter& (0+255),f,b
  2254  000A3E  D7D3               	goto	l2213
  2255  000A40                     l989:
  2256                           
  2257                           ; BSR set to: 0
  2258  000A40  C0AA  F0A5         	movff	___lwdiv@quotient,?___lwdiv
  2259  000A44  C0AB  F0A6         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2260                           
  2261                           ; BSR set to: 0
  2262  000A48  0012               	return	
  2263  000A4A                     __end_of___lwdiv:
  2264                           	opt stack 0
  2265                           pclatu	equ	0xFFB
  2266                           pclath	equ	0xFFA
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           prodh	equ	0xFF4
  2272                           prodl	equ	0xFF3
  2273                           intcon	equ	0xFF2
  2274                           postinc0	equ	0xFEE
  2275                           fsr0h	equ	0xFEA
  2276                           fsr0l	equ	0xFE9
  2277                           wreg	equ	0xFE8
  2278                           indf1	equ	0xFE7
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           bsr	equ	0xFE0
  2282                           indf2	equ	0xFDF
  2283                           fsr2h	equ	0xFDA
  2284                           fsr2l	equ	0xFD9
  2285                           status	equ	0xFD8
  2286                           
  2287 ;; *************** function _GetKeyCode *****************
  2288 ;; Defined at:
  2289 ;;		line 195 in file "system.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  temp            1    0[BANK0 ] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      unsigned char 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;Total ram usage:        1 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    4
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text7
  2318  000CE6                     __ptext7:
  2319                           	opt stack 0
  2320  000CE6                     _GetKeyCode:
  2321                           	opt stack 25
  2322                           
  2323                           ;system.c: 197: char temp;
  2324                           ;system.c: 199: temp = PORTB;
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;incstack = 0
  2328  000CE6  CF81 F0A5          	movff	3969,GetKeyCode@temp	;volatile
  2329                           
  2330                           ;system.c: 200: temp=temp & 0b00110000;
  2331  000CEA  0100               	movlb	0	; () banked
  2332  000CEC  0100               	movlb	0	; () banked
  2333  000CEE  51A5               	movf	GetKeyCode@temp& (0+255),w,b
  2334  000CF0  0B30               	andlw	48
  2335  000CF2  0100               	movlb	0	; () banked
  2336  000CF4  0100               	movlb	0	; () banked
  2337  000CF6  6FA5               	movwf	GetKeyCode@temp& (0+255),b
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;system.c: 202: return temp;
  2341  000CF8  0100               	movlb	0	; () banked
  2342  000CFA  0100               	movlb	0	; () banked
  2343  000CFC  51A5               	movf	GetKeyCode@temp& (0+255),w,b
  2344  000CFE  0012               	return	
  2345  000D00                     __end_of_GetKeyCode:
  2346                           	opt stack 0
  2347                           pclatu	equ	0xFFB
  2348                           pclath	equ	0xFFA
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           prodh	equ	0xFF4
  2354                           prodl	equ	0xFF3
  2355                           intcon	equ	0xFF2
  2356                           postinc0	equ	0xFEE
  2357                           fsr0h	equ	0xFEA
  2358                           fsr0l	equ	0xFE9
  2359                           wreg	equ	0xFE8
  2360                           indf1	equ	0xFE7
  2361                           fsr1h	equ	0xFE2
  2362                           fsr1l	equ	0xFE1
  2363                           bsr	equ	0xFE0
  2364                           indf2	equ	0xFDF
  2365                           fsr2h	equ	0xFDA
  2366                           fsr2l	equ	0xFD9
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _GetCanAdress *****************
  2370 ;; Defined at:
  2371 ;;		line 205 in file "system.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      unsigned char 
  2378 ;; Registers used:
  2379 ;;		wreg
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    4
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text8
  2400  000D12                     __ptext8:
  2401                           	opt stack 0
  2402  000D12                     _GetCanAdress:
  2403                           	opt stack 25
  2404                           
  2405                           ;system.c: 207: return 0;
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;incstack = 0
  2409  000D12  0E00               	movlw	0
  2410  000D14  0012               	return	
  2411  000D16                     __end_of_GetCanAdress:
  2412                           	opt stack 0
  2413                           pclatu	equ	0xFFB
  2414                           pclath	equ	0xFFA
  2415                           tblptru	equ	0xFF8
  2416                           tblptrh	equ	0xFF7
  2417                           tblptrl	equ	0xFF6
  2418                           tablat	equ	0xFF5
  2419                           prodh	equ	0xFF4
  2420                           prodl	equ	0xFF3
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           fsr0h	equ	0xFEA
  2424                           fsr0l	equ	0xFE9
  2425                           wreg	equ	0xFE8
  2426                           indf1	equ	0xFE7
  2427                           fsr1h	equ	0xFE2
  2428                           fsr1l	equ	0xFE1
  2429                           bsr	equ	0xFE0
  2430                           indf2	equ	0xFDF
  2431                           fsr2h	equ	0xFDA
  2432                           fsr2l	equ	0xFD9
  2433                           status	equ	0xFD8
  2434                           
  2435 ;; *************** function _ConfigureTimers *****************
  2436 ;; Defined at:
  2437 ;;		line 125 in file "system.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;		None               void
  2444 ;; Registers used:
  2445 ;;		wreg, status,2
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    4
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text9
  2466  000C90                     __ptext9:
  2467                           	opt stack 0
  2468  000C90                     _ConfigureTimers:
  2469                           	opt stack 25
  2470                           
  2471                           ;system.c: 129: T0CONbits.T08BIT = 0;
  2472                           
  2473                           ;incstack = 0
  2474  000C90  9CD5               	bcf	4053,6,c	;volatile
  2475                           
  2476                           ;system.c: 130: T0CONbits.T0CS = 0;
  2477  000C92  9AD5               	bcf	4053,5,c	;volatile
  2478                           
  2479                           ;system.c: 131: T0CONbits.PSA = 0;
  2480  000C94  96D5               	bcf	4053,3,c	;volatile
  2481                           
  2482                           ;system.c: 132: T0CONbits.T0PS=6;
  2483  000C96  50D5               	movf	4053,w,c	;volatile
  2484  000C98  0BF8               	andlw	-8
  2485  000C9A  0906               	iorlw	6
  2486  000C9C  6ED5               	movwf	4053,c	;volatile
  2487                           
  2488                           ;system.c: 134: TMR0H = 0xFB;
  2489  000C9E  0EFB               	movlw	251
  2490  000CA0  6ED7               	movwf	4055,c	;volatile
  2491                           
  2492                           ;system.c: 135: TMR0L = 0x1E;
  2493  000CA2  0E1E               	movlw	30
  2494  000CA4  6ED6               	movwf	4054,c	;volatile
  2495                           
  2496                           ;system.c: 137: T0CONbits.TMR0ON = 1;
  2497  000CA6  8ED5               	bsf	4053,7,c	;volatile
  2498                           
  2499                           ;system.c: 141: T2CONbits.T2OUTPS = 0;
  2500  000CA8  96CA               	bcf	4042,3,c	;volatile
  2501  000CAA  98CA               	bcf	4042,4,c	;volatile
  2502  000CAC  9ACA               	bcf	4042,5,c	;volatile
  2503  000CAE  9CCA               	bcf	4042,6,c	;volatile
  2504                           
  2505                           ;system.c: 142: T2CONbits.T2CKPS = 0x2;
  2506  000CB0  50CA               	movf	4042,w,c	;volatile
  2507  000CB2  0BFC               	andlw	-4
  2508  000CB4  0902               	iorlw	2
  2509  000CB6  6ECA               	movwf	4042,c	;volatile
  2510                           
  2511                           ;system.c: 143: PR2 = 50;
  2512  000CB8  0E32               	movlw	50
  2513  000CBA  6ECB               	movwf	4043,c	;volatile
  2514  000CBC  0012               	return	
  2515  000CBE                     __end_of_ConfigureTimers:
  2516                           	opt stack 0
  2517                           pclatu	equ	0xFFB
  2518                           pclath	equ	0xFFA
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           prodh	equ	0xFF4
  2524                           prodl	equ	0xFF3
  2525                           intcon	equ	0xFF2
  2526                           postinc0	equ	0xFEE
  2527                           fsr0h	equ	0xFEA
  2528                           fsr0l	equ	0xFE9
  2529                           wreg	equ	0xFE8
  2530                           indf1	equ	0xFE7
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           bsr	equ	0xFE0
  2534                           indf2	equ	0xFDF
  2535                           fsr2h	equ	0xFDA
  2536                           fsr2l	equ	0xFD9
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _ConfigureOscillator *****************
  2540 ;; Defined at:
  2541 ;;		line 32 in file "system.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;		None               void
  2548 ;; Registers used:
  2549 ;;		wreg, status,2
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    4
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text10
  2570  000D00                     __ptext10:
  2571                           	opt stack 0
  2572  000D00                     _ConfigureOscillator:
  2573                           	opt stack 25
  2574                           
  2575                           ;system.c: 35: OSCCONbits.IDLEN=1;
  2576                           
  2577                           ;incstack = 0
  2578  000D00  8ED3               	bsf	4051,7,c	;volatile
  2579                           
  2580                           ;system.c: 36: OSCCONbits.IRCF=0;
  2581  000D02  98D3               	bcf	4051,4,c	;volatile
  2582  000D04  9AD3               	bcf	4051,5,c	;volatile
  2583  000D06  9CD3               	bcf	4051,6,c	;volatile
  2584                           
  2585                           ;system.c: 37: OSCCONbits.SCS=0;
  2586  000D08  0EFC               	movlw	-4
  2587  000D0A  16D3               	andwf	4051,f,c	;volatile
  2588  000D0C  0012               	return	
  2589  000D0E                     __end_of_ConfigureOscillator:
  2590                           	opt stack 0
  2591                           pclatu	equ	0xFFB
  2592                           pclath	equ	0xFFA
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           prodh	equ	0xFF4
  2598                           prodl	equ	0xFF3
  2599                           intcon	equ	0xFF2
  2600                           postinc0	equ	0xFEE
  2601                           fsr0h	equ	0xFEA
  2602                           fsr0l	equ	0xFE9
  2603                           wreg	equ	0xFE8
  2604                           indf1	equ	0xFE7
  2605                           fsr1h	equ	0xFE2
  2606                           fsr1l	equ	0xFE1
  2607                           bsr	equ	0xFE0
  2608                           indf2	equ	0xFDF
  2609                           fsr2h	equ	0xFDA
  2610                           fsr2l	equ	0xFD9
  2611                           status	equ	0xFD8
  2612                           
  2613 ;; *************** function _ConfigureInterrupts *****************
  2614 ;; Defined at:
  2615 ;;		line 93 in file "system.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;		None               void
  2622 ;; Registers used:
  2623 ;;		wreg, status,2
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    4
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text11
  2644  000B42                     __ptext11:
  2645                           	opt stack 0
  2646  000B42                     _ConfigureInterrupts:
  2647                           	opt stack 25
  2648                           
  2649                           ;system.c: 97: RCONbits.IPEN = 1;
  2650                           
  2651                           ;incstack = 0
  2652  000B42  8ED0               	bsf	4048,7,c	;volatile
  2653                           
  2654                           ;system.c: 99: INTCON = 0b00100000;
  2655  000B44  0E20               	movlw	32
  2656  000B46  6EF2               	movwf	intcon,c	;volatile
  2657                           
  2658                           ;system.c: 100: INTCON2 = 0b11111000;
  2659  000B48  0EF8               	movlw	248
  2660  000B4A  6EF1               	movwf	intcon2,c	;volatile
  2661                           
  2662                           ;system.c: 101: INTCON3 = 0b00000000;
  2663  000B4C  0E00               	movlw	0
  2664  000B4E  6EF0               	movwf	intcon3,c	;volatile
  2665                           
  2666                           ;system.c: 103: PIR1 = 0;
  2667  000B50  0E00               	movlw	0
  2668  000B52  6E9E               	movwf	3998,c	;volatile
  2669                           
  2670                           ;system.c: 104: PIR2 = 0;
  2671  000B54  0E00               	movlw	0
  2672  000B56  6EA1               	movwf	4001,c	;volatile
  2673                           
  2674                           ;system.c: 105: PIR3 = 0;
  2675  000B58  0E00               	movlw	0
  2676  000B5A  6EA4               	movwf	4004,c	;volatile
  2677                           
  2678                           ;system.c: 106: PIR4 = 0;
  2679  000B5C  0E00               	movlw	0
  2680  000B5E  6EB7               	movwf	4023,c	;volatile
  2681                           
  2682                           ;system.c: 107: PIR5 = 0;
  2683  000B60  0E00               	movlw	0
  2684  000B62  6E77               	movwf	3959,c	;volatile
  2685                           
  2686                           ;system.c: 109: PIE1 = 0;
  2687  000B64  0E00               	movlw	0
  2688  000B66  6E9D               	movwf	3997,c	;volatile
  2689                           
  2690                           ;system.c: 110: PIE2 = 0;
  2691  000B68  0E00               	movlw	0
  2692  000B6A  6EA0               	movwf	4000,c	;volatile
  2693                           
  2694                           ;system.c: 111: PIE3 = 0;
  2695  000B6C  0E00               	movlw	0
  2696  000B6E  6EA3               	movwf	4003,c	;volatile
  2697                           
  2698                           ;system.c: 112: PIE4 = 0;
  2699  000B70  0E00               	movlw	0
  2700  000B72  6EB6               	movwf	4022,c	;volatile
  2701                           
  2702                           ;system.c: 113: PIE5 = 0b00000011;
  2703  000B74  0E03               	movlw	3
  2704  000B76  6E76               	movwf	3958,c	;volatile
  2705                           
  2706                           ;system.c: 115: IPR1= 0 ;
  2707  000B78  0E00               	movlw	0
  2708  000B7A  6E9F               	movwf	3999,c	;volatile
  2709                           
  2710                           ;system.c: 116: IPR2= 0 ;
  2711  000B7C  0E00               	movlw	0
  2712  000B7E  6EA2               	movwf	4002,c	;volatile
  2713                           
  2714                           ;system.c: 117: IPR3= 0 ;
  2715  000B80  0E00               	movlw	0
  2716  000B82  6EA5               	movwf	4005,c	;volatile
  2717                           
  2718                           ;system.c: 118: IPR4= 0 ;
  2719  000B84  0E00               	movlw	0
  2720  000B86  6EB8               	movwf	4024,c	;volatile
  2721                           
  2722                           ;system.c: 119: IPR5= 0b00000011 ;
  2723  000B88  0E03               	movlw	3
  2724  000B8A  6E78               	movwf	3960,c	;volatile
  2725                           
  2726                           ;system.c: 121: INTCONbits.GIE=1;
  2727  000B8C  8EF2               	bsf	intcon,7,c	;volatile
  2728                           
  2729                           ;system.c: 122: INTCONbits.PEIE=1;
  2730  000B8E  8CF2               	bsf	intcon,6,c	;volatile
  2731  000B90  0012               	return	
  2732  000B92                     __end_of_ConfigureInterrupts:
  2733                           	opt stack 0
  2734                           pclatu	equ	0xFFB
  2735                           pclath	equ	0xFFA
  2736                           tblptru	equ	0xFF8
  2737                           tblptrh	equ	0xFF7
  2738                           tblptrl	equ	0xFF6
  2739                           tablat	equ	0xFF5
  2740                           prodh	equ	0xFF4
  2741                           prodl	equ	0xFF3
  2742                           intcon	equ	0xFF2
  2743                           intcon2	equ	0xFF1
  2744                           intcon3	equ	0xFF0
  2745                           postinc0	equ	0xFEE
  2746                           fsr0h	equ	0xFEA
  2747                           fsr0l	equ	0xFE9
  2748                           wreg	equ	0xFE8
  2749                           indf1	equ	0xFE7
  2750                           fsr1h	equ	0xFE2
  2751                           fsr1l	equ	0xFE1
  2752                           bsr	equ	0xFE0
  2753                           indf2	equ	0xFDF
  2754                           fsr2h	equ	0xFDA
  2755                           fsr2l	equ	0xFD9
  2756                           status	equ	0xFD8
  2757                           
  2758 ;; *************** function _ConfigureGPIO *****************
  2759 ;; Defined at:
  2760 ;;		line 43 in file "system.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg, status,2
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;Total ram usage:        0 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    4
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_main
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text12
  2789  000AC8                     __ptext12:
  2790                           	opt stack 0
  2791  000AC8                     _ConfigureGPIO:
  2792                           	opt stack 25
  2793                           
  2794                           ;system.c: 46: ANCON0 = 0b00000000;
  2795                           
  2796                           ;incstack = 0
  2797  000AC8  0E00               	movlw	0
  2798  000ACA  010F               	movlb	15	; () banked
  2799  000ACC  010F               	movlb	15	; () banked
  2800  000ACE  6F5D               	movwf	93,b	;volatile
  2801                           
  2802                           ;system.c: 47: ANCON1 = 0b00000010;
  2803  000AD0  0E02               	movlw	2
  2804  000AD2  010F               	movlb	15	; () banked
  2805  000AD4  010F               	movlb	15	; () banked
  2806  000AD6  6F5C               	movwf	92,b	;volatile
  2807                           
  2808                           ; BSR set to: 15
  2809                           ;system.c: 49: ADCON0bits.CHS=0x9;
  2810  000AD8  84C2               	bsf	4034,2,c	;volatile
  2811  000ADA  96C2               	bcf	4034,3,c	;volatile
  2812  000ADC  98C2               	bcf	4034,4,c	;volatile
  2813  000ADE  8AC2               	bsf	4034,5,c	;volatile
  2814  000AE0  9CC2               	bcf	4034,6,c	;volatile
  2815                           
  2816                           ;system.c: 51: ADCON1bits.TRIGSEL=0;
  2817  000AE2  0E3F               	movlw	-193
  2818  000AE4  16C1               	andwf	4033,f,c	;volatile
  2819                           
  2820                           ;system.c: 52: ADCON1bits.VCFG=0;
  2821  000AE6  0ECF               	movlw	-49
  2822  000AE8  16C1               	andwf	4033,f,c	;volatile
  2823                           
  2824                           ; BSR set to: 15
  2825                           ;system.c: 53: ADCON1bits.VNCFG=0;
  2826  000AEA  96C1               	bcf	4033,3,c	;volatile
  2827                           
  2828                           ; BSR set to: 15
  2829                           ;system.c: 54: ADCON1bits.CHSN=0;
  2830  000AEC  90C1               	bcf	4033,0,c	;volatile
  2831  000AEE  92C1               	bcf	4033,1,c	;volatile
  2832  000AF0  94C1               	bcf	4033,2,c	;volatile
  2833                           
  2834                           ;system.c: 56: ADCON2bits.ADCS=0x6;
  2835  000AF2  50C0               	movf	4032,w,c	;volatile
  2836  000AF4  0BF8               	andlw	-8
  2837  000AF6  0906               	iorlw	6
  2838  000AF8  6EC0               	movwf	4032,c	;volatile
  2839                           
  2840                           ; BSR set to: 15
  2841                           ;system.c: 57: ADCON2bits.ACQT=0x7;
  2842  000AFA  86C0               	bsf	4032,3,c	;volatile
  2843  000AFC  88C0               	bsf	4032,4,c	;volatile
  2844  000AFE  8AC0               	bsf	4032,5,c	;volatile
  2845                           
  2846                           ; BSR set to: 15
  2847                           ;system.c: 58: ADCON2bits.ADFM=1;
  2848  000B00  8EC0               	bsf	4032,7,c	;volatile
  2849                           
  2850                           ; BSR set to: 15
  2851                           ;system.c: 60: ADCON0bits.ADON=1;
  2852  000B02  80C2               	bsf	4034,0,c	;volatile
  2853                           
  2854                           ;system.c: 62: TRISA = 0x1F;
  2855  000B04  0E1F               	movlw	31
  2856  000B06  6E92               	movwf	3986,c	;volatile
  2857                           
  2858                           ;system.c: 64: TRISE = 0b11111110;
  2859  000B08  0EFE               	movlw	254
  2860  000B0A  6E96               	movwf	3990,c	;volatile
  2861                           
  2862                           ; BSR set to: 15
  2863                           ;system.c: 65: LATEbits.LATE0=1;
  2864  000B0C  808D               	bsf	3981,0,c	;volatile
  2865                           
  2866                           ;system.c: 67: TRISB = 0b11111011;
  2867  000B0E  0EFB               	movlw	251
  2868  000B10  6E93               	movwf	3987,c	;volatile
  2869                           
  2870                           ; BSR set to: 15
  2871                           ;system.c: 68: LATBbits.LATB2=0;
  2872  000B12  948A               	bcf	3978,2,c	;volatile
  2873                           
  2874                           ;system.c: 71: TRISC = 0b00010000;
  2875  000B14  0E10               	movlw	16
  2876  000B16  6E94               	movwf	3988,c	;volatile
  2877                           
  2878                           ; BSR set to: 15
  2879                           ;system.c: 72: LATCbits.LATC1=1;
  2880  000B18  828B               	bsf	3979,1,c	;volatile
  2881                           
  2882                           ; BSR set to: 15
  2883                           ;system.c: 73: LATCbits.LATC2=0;
  2884  000B1A  948B               	bcf	3979,2,c	;volatile
  2885                           
  2886                           ; BSR set to: 15
  2887                           ;system.c: 74: LATCbits.LATC3=0;
  2888  000B1C  968B               	bcf	3979,3,c	;volatile
  2889                           
  2890                           ; BSR set to: 15
  2891                           ;system.c: 75: LATCbits.LATC5=0;
  2892  000B1E  9A8B               	bcf	3979,5,c	;volatile
  2893                           
  2894                           ; BSR set to: 15
  2895                           ;system.c: 76: LATCbits.LATC6=0;
  2896  000B20  9C8B               	bcf	3979,6,c	;volatile
  2897                           
  2898                           ; BSR set to: 15
  2899                           ;system.c: 77: LATCbits.LATC7=0;
  2900  000B22  9E8B               	bcf	3979,7,c	;volatile
  2901                           
  2902                           ;system.c: 79: TRISD = 0b00000111;
  2903  000B24  0E07               	movlw	7
  2904  000B26  6E95               	movwf	3989,c	;volatile
  2905                           
  2906                           ; BSR set to: 15
  2907                           ;system.c: 80: LATDbits.LATD3=0;
  2908  000B28  968C               	bcf	3980,3,c	;volatile
  2909                           
  2910                           ; BSR set to: 15
  2911                           ;system.c: 81: LATDbits.LATD4=0;
  2912  000B2A  988C               	bcf	3980,4,c	;volatile
  2913                           
  2914                           ; BSR set to: 15
  2915                           ;system.c: 82: LATDbits.LATD5=0;
  2916  000B2C  9A8C               	bcf	3980,5,c	;volatile
  2917                           
  2918                           ; BSR set to: 15
  2919                           ;system.c: 83: LATDbits.LATD6=0;
  2920  000B2E  9C8C               	bcf	3980,6,c	;volatile
  2921                           
  2922                           ; BSR set to: 15
  2923                           ;system.c: 85: INTCON2bits.nRBPU=1;
  2924  000B30  8EF1               	bsf	intcon2,7,c	;volatile
  2925                           
  2926                           ;system.c: 87: WPUB=0x00;
  2927  000B32  0E00               	movlw	0
  2928  000B34  010F               	movlb	15	; () banked
  2929  000B36  010F               	movlb	15	; () banked
  2930  000B38  6F5B               	movwf	91,b	;volatile
  2931                           
  2932                           ; BSR set to: 15
  2933                           ;system.c: 89: PADCFG1bits.RDPU=1;
  2934  000B3A  010F               	movlb	15	; () banked
  2935  000B3C  010F               	movlb	15	; () banked
  2936  000B3E  8F56               	bsf	86,7,b	;volatile
  2937                           
  2938                           ; BSR set to: 15
  2939  000B40  0012               	return	
  2940  000B42                     __end_of_ConfigureGPIO:
  2941                           	opt stack 0
  2942                           pclatu	equ	0xFFB
  2943                           pclath	equ	0xFFA
  2944                           tblptru	equ	0xFF8
  2945                           tblptrh	equ	0xFF7
  2946                           tblptrl	equ	0xFF6
  2947                           tablat	equ	0xFF5
  2948                           prodh	equ	0xFF4
  2949                           prodl	equ	0xFF3
  2950                           intcon	equ	0xFF2
  2951                           intcon2	equ	0xFF1
  2952                           intcon3	equ	0xFF0
  2953                           postinc0	equ	0xFEE
  2954                           fsr0h	equ	0xFEA
  2955                           fsr0l	equ	0xFE9
  2956                           wreg	equ	0xFE8
  2957                           indf1	equ	0xFE7
  2958                           fsr1h	equ	0xFE2
  2959                           fsr1l	equ	0xFE1
  2960                           bsr	equ	0xFE0
  2961                           indf2	equ	0xFDF
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _ConfigureCCP *****************
  2967 ;; Defined at:
  2968 ;;		line 149 in file "system.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;		None               void
  2975 ;; Registers used:
  2976 ;;		wreg, status,2
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    4
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_main
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text13
  2997  000CBE                     __ptext13:
  2998                           	opt stack 0
  2999  000CBE                     _ConfigureCCP:
  3000                           	opt stack 25
  3001                           
  3002                           ;system.c: 151: CCP2CON = 0;
  3003                           
  3004                           ; BSR set to: 15
  3005                           ;incstack = 0
  3006  000CBE  0E00               	movlw	0
  3007  000CC0  010F               	movlb	15	; () banked
  3008  000CC2  010F               	movlb	15	; () banked
  3009  000CC4  6F50               	movwf	80,b	;volatile
  3010                           
  3011                           ;system.c: 152: CCP3CON = 0;
  3012  000CC6  0E00               	movlw	0
  3013  000CC8  010F               	movlb	15	; () banked
  3014  000CCA  010F               	movlb	15	; () banked
  3015  000CCC  6F4D               	movwf	77,b	;volatile
  3016                           
  3017                           ;system.c: 153: CCP4CON = 0;
  3018  000CCE  0E00               	movlw	0
  3019  000CD0  010F               	movlb	15	; () banked
  3020  000CD2  010F               	movlb	15	; () banked
  3021  000CD4  6F4A               	movwf	74,b	;volatile
  3022                           
  3023                           ;system.c: 154: CCP5CON = 0;
  3024  000CD6  0E00               	movlw	0
  3025  000CD8  010F               	movlb	15	; () banked
  3026  000CDA  010F               	movlb	15	; () banked
  3027  000CDC  6F47               	movwf	71,b	;volatile
  3028                           
  3029                           ;system.c: 156: CCPTMRS= 0b00000001;
  3030  000CDE  0E01               	movlw	1
  3031  000CE0  6E99               	movwf	3993,c	;volatile
  3032                           
  3033                           ; BSR set to: 15
  3034                           ;system.c: 160: T2CONbits.TMR2ON=1;
  3035  000CE2  84CA               	bsf	4042,2,c	;volatile
  3036                           
  3037                           ; BSR set to: 15
  3038  000CE4  0012               	return	
  3039  000CE6                     __end_of_ConfigureCCP:
  3040                           	opt stack 0
  3041                           pclatu	equ	0xFFB
  3042                           pclath	equ	0xFFA
  3043                           tblptru	equ	0xFF8
  3044                           tblptrh	equ	0xFF7
  3045                           tblptrl	equ	0xFF6
  3046                           tablat	equ	0xFF5
  3047                           prodh	equ	0xFF4
  3048                           prodl	equ	0xFF3
  3049                           intcon	equ	0xFF2
  3050                           intcon2	equ	0xFF1
  3051                           intcon3	equ	0xFF0
  3052                           postinc0	equ	0xFEE
  3053                           fsr0h	equ	0xFEA
  3054                           fsr0l	equ	0xFE9
  3055                           wreg	equ	0xFE8
  3056                           indf1	equ	0xFE7
  3057                           fsr1h	equ	0xFE2
  3058                           fsr1l	equ	0xFE1
  3059                           bsr	equ	0xFE0
  3060                           indf2	equ	0xFDF
  3061                           fsr2h	equ	0xFDA
  3062                           fsr2l	equ	0xFD9
  3063                           status	equ	0xFD8
  3064                           
  3065 ;; *************** function _CANTxFifoInit *****************
  3066 ;; Defined at:
  3067 ;;		line 29 in file "Can_HL.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;		None               void
  3074 ;; Registers used:
  3075 ;;		status,2
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3085 ;;Total ram usage:        1 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    4
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text14
  3096  000BDC                     __ptext14:
  3097                           	opt stack 0
  3098  000BDC                     _CANTxFifoInit:
  3099                           	opt stack 25
  3100                           
  3101                           ;Can_HL.c: 31: CANTxFifo.FifoEmpty=1;
  3102                           
  3103                           ; BSR set to: 15
  3104                           ;incstack = 0
  3105  000BDC  0100               	movlb	0	; () banked
  3106  000BDE  6FA5               	movwf	??_CANTxFifoInit& (0+255),b
  3107  000BE0  0E01               	movlw	1
  3108  000BE2  0101               	movlb	1	; () banked
  3109  000BE4  0101               	movlb	1	; () banked
  3110  000BE6  6F8F               	movwf	(_CANTxFifo+143)& (0+255),b
  3111  000BE8  0100               	movlb	0	; () banked
  3112  000BEA  51A5               	movf	??_CANTxFifoInit& (0+255),w,b
  3113                           
  3114                           ;Can_HL.c: 32: CANTxFifo.Fifofull=0;
  3115  000BEC  0100               	movlb	0	; () banked
  3116  000BEE  6FA5               	movwf	??_CANTxFifoInit& (0+255),b
  3117  000BF0  0E00               	movlw	0
  3118  000BF2  0101               	movlb	1	; () banked
  3119  000BF4  0101               	movlb	1	; () banked
  3120  000BF6  6F8E               	movwf	(_CANTxFifo+142)& (0+255),b
  3121  000BF8  0100               	movlb	0	; () banked
  3122  000BFA  51A5               	movf	??_CANTxFifoInit& (0+255),w,b
  3123                           
  3124                           ;Can_HL.c: 33: CANTxFifo.LowIndex=0;
  3125  000BFC  0100               	movlb	0	; () banked
  3126  000BFE  6FA5               	movwf	??_CANTxFifoInit& (0+255),b
  3127  000C00  0E00               	movlw	0
  3128  000C02  0101               	movlb	1	; () banked
  3129  000C04  0101               	movlb	1	; () banked
  3130  000C06  6F8C               	movwf	(_CANTxFifo+140)& (0+255),b
  3131  000C08  0100               	movlb	0	; () banked
  3132  000C0A  51A5               	movf	??_CANTxFifoInit& (0+255),w,b
  3133                           
  3134                           ;Can_HL.c: 34: CANTxFifo.HighIndex=0;
  3135  000C0C  0100               	movlb	0	; () banked
  3136  000C0E  6FA5               	movwf	??_CANTxFifoInit& (0+255),b
  3137  000C10  0E00               	movlw	0
  3138  000C12  0101               	movlb	1	; () banked
  3139  000C14  0101               	movlb	1	; () banked
  3140  000C16  6F8D               	movwf	(_CANTxFifo+141)& (0+255),b
  3141  000C18  0100               	movlb	0	; () banked
  3142  000C1A  51A5               	movf	??_CANTxFifoInit& (0+255),w,b
  3143                           
  3144                           ; BSR set to: 0
  3145  000C1C  0012               	return	
  3146  000C1E                     __end_of_CANTxFifoInit:
  3147                           	opt stack 0
  3148                           pclatu	equ	0xFFB
  3149                           pclath	equ	0xFFA
  3150                           tblptru	equ	0xFF8
  3151                           tblptrh	equ	0xFF7
  3152                           tblptrl	equ	0xFF6
  3153                           tablat	equ	0xFF5
  3154                           prodh	equ	0xFF4
  3155                           prodl	equ	0xFF3
  3156                           intcon	equ	0xFF2
  3157                           intcon2	equ	0xFF1
  3158                           intcon3	equ	0xFF0
  3159                           postinc0	equ	0xFEE
  3160                           fsr0h	equ	0xFEA
  3161                           fsr0l	equ	0xFE9
  3162                           wreg	equ	0xFE8
  3163                           indf1	equ	0xFE7
  3164                           fsr1h	equ	0xFE2
  3165                           fsr1l	equ	0xFE1
  3166                           bsr	equ	0xFE0
  3167                           indf2	equ	0xFDF
  3168                           fsr2h	equ	0xFDA
  3169                           fsr2l	equ	0xFD9
  3170                           status	equ	0xFD8
  3171                           
  3172 ;; *************** function _CANRxFifoInit *****************
  3173 ;; Defined at:
  3174 ;;		line 37 in file "Can_HL.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;		None               void
  3181 ;; Registers used:
  3182 ;;		status,2
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3190 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3191 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;Total ram usage:        1 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    4
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text15
  3203  000C1E                     __ptext15:
  3204                           	opt stack 0
  3205  000C1E                     _CANRxFifoInit:
  3206                           	opt stack 25
  3207                           
  3208                           ;Can_HL.c: 39: CANRxFifo.FifoEmpty=1;
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;incstack = 0
  3212  000C1E  0100               	movlb	0	; () banked
  3213  000C20  6FA5               	movwf	??_CANRxFifoInit& (0+255),b
  3214  000C22  0E01               	movlw	1
  3215  000C24  0102               	movlb	2	; () banked
  3216  000C26  0102               	movlb	2	; () banked
  3217  000C28  6F8F               	movwf	(_CANRxFifo+143)& (0+255),b
  3218  000C2A  0100               	movlb	0	; () banked
  3219  000C2C  51A5               	movf	??_CANRxFifoInit& (0+255),w,b
  3220                           
  3221                           ;Can_HL.c: 40: CANRxFifo.Fifofull=0;
  3222  000C2E  0100               	movlb	0	; () banked
  3223  000C30  6FA5               	movwf	??_CANRxFifoInit& (0+255),b
  3224  000C32  0E00               	movlw	0
  3225  000C34  0102               	movlb	2	; () banked
  3226  000C36  0102               	movlb	2	; () banked
  3227  000C38  6F8E               	movwf	(_CANRxFifo+142)& (0+255),b
  3228  000C3A  0100               	movlb	0	; () banked
  3229  000C3C  51A5               	movf	??_CANRxFifoInit& (0+255),w,b
  3230                           
  3231                           ;Can_HL.c: 41: CANRxFifo.LowIndex=0;
  3232  000C3E  0100               	movlb	0	; () banked
  3233  000C40  6FA5               	movwf	??_CANRxFifoInit& (0+255),b
  3234  000C42  0E00               	movlw	0
  3235  000C44  0102               	movlb	2	; () banked
  3236  000C46  0102               	movlb	2	; () banked
  3237  000C48  6F8C               	movwf	(_CANRxFifo+140)& (0+255),b
  3238  000C4A  0100               	movlb	0	; () banked
  3239  000C4C  51A5               	movf	??_CANRxFifoInit& (0+255),w,b
  3240                           
  3241                           ;Can_HL.c: 42: CANRxFifo.HighIndex=0;
  3242  000C4E  0100               	movlb	0	; () banked
  3243  000C50  6FA5               	movwf	??_CANRxFifoInit& (0+255),b
  3244  000C52  0E00               	movlw	0
  3245  000C54  0102               	movlb	2	; () banked
  3246  000C56  0102               	movlb	2	; () banked
  3247  000C58  6F8D               	movwf	(_CANRxFifo+141)& (0+255),b
  3248  000C5A  0100               	movlb	0	; () banked
  3249  000C5C  51A5               	movf	??_CANRxFifoInit& (0+255),w,b
  3250                           
  3251                           ; BSR set to: 0
  3252  000C5E  0012               	return	
  3253  000C60                     __end_of_CANRxFifoInit:
  3254                           	opt stack 0
  3255                           pclatu	equ	0xFFB
  3256                           pclath	equ	0xFFA
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           prodh	equ	0xFF4
  3262                           prodl	equ	0xFF3
  3263                           intcon	equ	0xFF2
  3264                           intcon2	equ	0xFF1
  3265                           intcon3	equ	0xFF0
  3266                           postinc0	equ	0xFEE
  3267                           fsr0h	equ	0xFEA
  3268                           fsr0l	equ	0xFE9
  3269                           wreg	equ	0xFE8
  3270                           indf1	equ	0xFE7
  3271                           fsr1h	equ	0xFE2
  3272                           fsr1l	equ	0xFE1
  3273                           bsr	equ	0xFE0
  3274                           indf2	equ	0xFDF
  3275                           fsr2h	equ	0xFDA
  3276                           fsr2l	equ	0xFD9
  3277                           status	equ	0xFD8
  3278                           
  3279 ;; *************** function _high_isr *****************
  3280 ;; Defined at:
  3281 ;;		line 34 in file "interrupts.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  CANRxNewMess   14   56[COMRAM] struct CANRxMsg
  3286 ;; Return value:  Size  Location     Type
  3287 ;;		None               void
  3288 ;; Registers used:
  3289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3296 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3297 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3298 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3299 ;;Total ram usage:       28 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    2
  3302 ;; This function calls:
  3303 ;;		_ECANReceiveMessage
  3304 ;;		_PutCANRxFifo
  3305 ;; This function is called by:
  3306 ;;		Interrupt level 2
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	intcode
  3311  000008                     __pintcode:
  3312                           	opt stack 0
  3313  000008                     _high_isr:
  3314                           	opt stack 24
  3315                           
  3316                           ;incstack = 0
  3317  000008  CFFA F02B          	movff	pclath,??_high_isr
  3318  00000C  CFFB F02C          	movff	pclatu,??_high_isr+1
  3319  000010  EF75  F004         	goto	int_func
  3320                           pclatu	equ	0xFFB
  3321                           pclath	equ	0xFFA
  3322                           tblptru	equ	0xFF8
  3323                           tblptrh	equ	0xFF7
  3324                           tblptrl	equ	0xFF6
  3325                           tablat	equ	0xFF5
  3326                           prodh	equ	0xFF4
  3327                           prodl	equ	0xFF3
  3328                           intcon	equ	0xFF2
  3329                           intcon2	equ	0xFF1
  3330                           intcon3	equ	0xFF0
  3331                           postinc0	equ	0xFEE
  3332                           fsr0h	equ	0xFEA
  3333                           fsr0l	equ	0xFE9
  3334                           wreg	equ	0xFE8
  3335                           indf1	equ	0xFE7
  3336                           fsr1h	equ	0xFE2
  3337                           fsr1l	equ	0xFE1
  3338                           bsr	equ	0xFE0
  3339                           indf2	equ	0xFDF
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8
  3343                           
  3344                           	psect	intcode_body
  3345  0008EA                     __pintcode_body:
  3346                           	opt stack 24
  3347  0008EA                     int_func:
  3348                           	opt stack 24
  3349  0008EA  CFE9 F02D          	movff	fsr0l,??_high_isr+2
  3350  0008EE  CFEA F02E          	movff	fsr0h,??_high_isr+3
  3351  0008F2  CFE1 F02F          	movff	fsr1l,??_high_isr+4
  3352  0008F6  CFE2 F030          	movff	fsr1h,??_high_isr+5
  3353  0008FA  CFD9 F031          	movff	fsr2l,??_high_isr+6
  3354  0008FE  CFDA F032          	movff	fsr2h,??_high_isr+7
  3355  000902  CFF3 F033          	movff	prodl,??_high_isr+8
  3356  000906  CFF4 F034          	movff	prodh,??_high_isr+9
  3357  00090A  CFF6 F035          	movff	tblptrl,??_high_isr+10
  3358  00090E  CFF7 F036          	movff	tblptrh,??_high_isr+11
  3359  000912  CFF8 F037          	movff	tblptru,??_high_isr+12
  3360  000916  CFF5 F038          	movff	tablat,??_high_isr+13
  3361                           
  3362                           ;interrupts.c: 44: struct CANRxMsg CANRxNewMessage;
  3363                           ;interrupts.c: 51: if(PIR5bits.RXB0IF==1 | PIR5bits.RXB1IF==1)
  3364  00091A  0E00               	movlw	0
  3365  00091C  B077               	btfsc	3959,0,c	;volatile
  3366  00091E  0E01               	movlw	1
  3367  000920  B277               	btfsc	3959,1,c	;volatile
  3368  000922  0E01               	movlw	1
  3369  000924  A0E8               	btfss	wreg,0,c
  3370  000926  D01F               	goto	i2l20
  3371                           
  3372                           ;interrupts.c: 52: {
  3373                           ;interrupts.c: 54: ECANReceiveMessage(&CANRxNewMessage.id, CANRxNewMessage.data_RX, &CAN
      +                          RxNewMessage.dataLen, &CANRxNewMessage.flags);
  3374  000928  0E00               	movlw	high high_isr@CANRxNewMessage
  3375  00092A  6E1D               	movwf	ECANReceiveMessage@id+1,c
  3376  00092C  0E39               	movlw	low high_isr@CANRxNewMessage
  3377  00092E  6E1C               	movwf	ECANReceiveMessage@id,c
  3378  000930  0E00               	movlw	high (high_isr@CANRxNewMessage+4)
  3379  000932  6E1F               	movwf	ECANReceiveMessage@data+1,c
  3380  000934  0E3D               	movlw	low (high_isr@CANRxNewMessage+4)
  3381  000936  6E1E               	movwf	ECANReceiveMessage@data,c
  3382  000938  0E00               	movlw	high (high_isr@CANRxNewMessage+12)
  3383  00093A  6E21               	movwf	ECANReceiveMessage@dataLen+1,c
  3384  00093C  0E45               	movlw	low (high_isr@CANRxNewMessage+12)
  3385  00093E  6E20               	movwf	ECANReceiveMessage@dataLen,c
  3386  000940  0E00               	movlw	high (high_isr@CANRxNewMessage+13)
  3387  000942  6E23               	movwf	ECANReceiveMessage@msgFlags+1,c
  3388  000944  0E46               	movlw	low (high_isr@CANRxNewMessage+13)
  3389  000946  6E22               	movwf	ECANReceiveMessage@msgFlags,c
  3390  000948  ECB6  F002         	call	_ECANReceiveMessage	;wreg free
  3391                           
  3392                           ;interrupts.c: 55: PutCANRxFifo(CANRxNewMessage);
  3393  00094C  EE20  F039         	lfsr	2,high_isr@CANRxNewMessage
  3394  000950  EE10  F013         	lfsr	1,PutCANRxFifo@PutMessage
  3395  000954  0E0E               	movlw	14
  3396  000956                     i2u88_41:
  3397  000956  CFDE FFE6          	movff	postinc2,postinc1
  3398  00095A  2EE8               	decfsz	wreg,f,c
  3399  00095C  D7FC               	goto	i2u88_41
  3400  00095E  EC25  F005         	call	_PutCANRxFifo	;wreg free
  3401                           
  3402                           ;interrupts.c: 57: PIR5bits.RXB0IF=0;
  3403  000962  9077               	bcf	3959,0,c	;volatile
  3404                           
  3405                           ;interrupts.c: 58: PIR5bits.RXB1IF=0;
  3406  000964  9277               	bcf	3959,1,c	;volatile
  3407  000966                     i2l20:
  3408  000966  C038  FFF5         	movff	??_high_isr+13,tablat
  3409  00096A  C037  FFF8         	movff	??_high_isr+12,tblptru
  3410  00096E  C036  FFF7         	movff	??_high_isr+11,tblptrh
  3411  000972  C035  FFF6         	movff	??_high_isr+10,tblptrl
  3412  000976  C034  FFF4         	movff	??_high_isr+9,prodh
  3413  00097A  C033  FFF3         	movff	??_high_isr+8,prodl
  3414  00097E  C032  FFDA         	movff	??_high_isr+7,fsr2h
  3415  000982  C031  FFD9         	movff	??_high_isr+6,fsr2l
  3416  000986  C030  FFE2         	movff	??_high_isr+5,fsr1h
  3417  00098A  C02F  FFE1         	movff	??_high_isr+4,fsr1l
  3418  00098E  C02E  FFEA         	movff	??_high_isr+3,fsr0h
  3419  000992  C02D  FFE9         	movff	??_high_isr+2,fsr0l
  3420  000996  C02C  FFFB         	movff	??_high_isr+1,pclatu
  3421  00099A  C02B  FFFA         	movff	??_high_isr,pclath
  3422  00099E  0011               	retfie		f
  3423  0009A0                     __end_of_high_isr:
  3424                           	opt stack 0
  3425                           pclatu	equ	0xFFB
  3426                           pclath	equ	0xFFA
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           prodh	equ	0xFF4
  3432                           prodl	equ	0xFF3
  3433                           intcon	equ	0xFF2
  3434                           intcon2	equ	0xFF1
  3435                           intcon3	equ	0xFF0
  3436                           postinc0	equ	0xFEE
  3437                           fsr0h	equ	0xFEA
  3438                           fsr0l	equ	0xFE9
  3439                           wreg	equ	0xFE8
  3440                           indf1	equ	0xFE7
  3441                           postinc1	equ	0xFE6
  3442                           fsr1h	equ	0xFE2
  3443                           fsr1l	equ	0xFE1
  3444                           bsr	equ	0xFE0
  3445                           indf2	equ	0xFDF
  3446                           postinc2	equ	0xFDE
  3447                           fsr2h	equ	0xFDA
  3448                           fsr2l	equ	0xFD9
  3449                           status	equ	0xFD8
  3450                           
  3451 ;; *************** function _PutCANRxFifo *****************
  3452 ;; Defined at:
  3453 ;;		line 97 in file "Can_HL.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  PutMessage     14   18[COMRAM] struct CANRxMsg
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;		None               void
  3460 ;; Registers used:
  3461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3467 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3470 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3471 ;;Total ram usage:       16 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_high_isr
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text18
  3481  000A4A                     __ptext18:
  3482                           	opt stack 0
  3483  000A4A                     _PutCANRxFifo:
  3484                           	opt stack 25
  3485                           
  3486                           ;Can_HL.c: 100: if(!CANRxFifo.Fifofull)
  3487                           
  3488                           ;incstack = 0
  3489  000A4A  0102               	movlb	2	; () banked
  3490  000A4C  0102               	movlb	2	; () banked
  3491  000A4E  678E               	tstfsz	(_CANRxFifo+142)& (0+255),b
  3492  000A50  0012               	return	
  3493                           
  3494                           ; BSR set to: 2
  3495                           ;Can_HL.c: 101: {
  3496                           ;Can_HL.c: 102: CANRxFifo.CANMsg[CANRxFifo.HighIndex]=PutMessage;
  3497  000A52  EE20  F013         	lfsr	2,PutCANRxFifo@PutMessage
  3498  000A56  0102               	movlb	2	; () banked
  3499  000A58  0102               	movlb	2	; () banked
  3500  000A5A  518D               	movf	(_CANRxFifo+141)& (0+255),w,b
  3501  000A5C  0D0E               	mullw	14
  3502  000A5E  0E00               	movlw	low _CANRxFifo
  3503  000A60  6E21               	movwf	??_PutCANRxFifo& (0+255),c
  3504  000A62  0E02               	movlw	high _CANRxFifo
  3505  000A64  6E22               	movwf	(??_PutCANRxFifo+1)& (0+255),c
  3506  000A66  50F3               	movf	prodl,w,c
  3507  000A68  2621               	addwf	??_PutCANRxFifo,f,c
  3508  000A6A  50F4               	movf	prodh,w,c
  3509  000A6C  2222               	addwfc	??_PutCANRxFifo+1,f,c
  3510  000A6E  C021  FFE1         	movff	??_PutCANRxFifo,fsr1l
  3511  000A72  C022  FFE2         	movff	??_PutCANRxFifo+1,fsr1h
  3512  000A76  0E0E               	movlw	14
  3513  000A78                     i2u90_41:
  3514  000A78  CFDE FFE6          	movff	postinc2,postinc1
  3515  000A7C  2EE8               	decfsz	wreg,f,c
  3516  000A7E  D7FC               	goto	i2u90_41
  3517                           
  3518                           ; BSR set to: 2
  3519                           ;Can_HL.c: 103: CANRxFifo.FifoEmpty=0;
  3520  000A80  6E21               	movwf	??_PutCANRxFifo& (0+255),c
  3521  000A82  0E00               	movlw	0
  3522  000A84  0102               	movlb	2	; () banked
  3523  000A86  0102               	movlb	2	; () banked
  3524  000A88  6F8F               	movwf	(_CANRxFifo+143)& (0+255),b
  3525  000A8A  5021               	movf	??_PutCANRxFifo& (0+255),w,c
  3526                           
  3527                           ; BSR set to: 2
  3528                           ;Can_HL.c: 104: CANRxFifo.HighIndex++;
  3529  000A8C  0102               	movlb	2	; () banked
  3530  000A8E  0102               	movlb	2	; () banked
  3531  000A90  2B8D               	incf	(_CANRxFifo+141)& (0+255),f,b
  3532                           
  3533                           ; BSR set to: 2
  3534                           ;Can_HL.c: 106: if(CANRxFifo.HighIndex==(10))
  3535  000A92  0102               	movlb	2	; () banked
  3536  000A94  0102               	movlb	2	; () banked
  3537  000A96  518D               	movf	(_CANRxFifo+141)& (0+255),w,b
  3538  000A98  0A0A               	xorlw	10
  3539  000A9A  A4D8               	btfss	status,2,c
  3540  000A9C  D006               	goto	i2l1813
  3541                           
  3542                           ; BSR set to: 2
  3543                           ;Can_HL.c: 107: CANRxFifo.HighIndex=0;
  3544  000A9E  6E21               	movwf	??_PutCANRxFifo& (0+255),c
  3545  000AA0  0E00               	movlw	0
  3546  000AA2  0102               	movlb	2	; () banked
  3547  000AA4  0102               	movlb	2	; () banked
  3548  000AA6  6F8D               	movwf	(_CANRxFifo+141)& (0+255),b
  3549  000AA8  5021               	movf	??_PutCANRxFifo& (0+255),w,c
  3550  000AAA                     i2l1813:
  3551                           
  3552                           ; BSR set to: 2
  3553                           ;Can_HL.c: 109: if(CANRxFifo.HighIndex==CANRxFifo.LowIndex)
  3554  000AAA  0102               	movlb	2	; () banked
  3555  000AAC  0102               	movlb	2	; () banked
  3556  000AAE  518C               	movf	(_CANRxFifo+140)& (0+255),w,b
  3557  000AB0  0102               	movlb	2	; () banked
  3558  000AB2  EE22  F08D         	lfsr	2,_CANRxFifo+141
  3559  000AB6  62DF               	cpfseq	indf2,c
  3560  000AB8  0012               	return	
  3561                           
  3562                           ; BSR set to: 2
  3563                           ;Can_HL.c: 110: CANRxFifo.Fifofull=1;
  3564  000ABA  6E21               	movwf	??_PutCANRxFifo& (0+255),c
  3565  000ABC  0E01               	movlw	1
  3566  000ABE  0102               	movlb	2	; () banked
  3567  000AC0  0102               	movlb	2	; () banked
  3568  000AC2  6F8E               	movwf	(_CANRxFifo+142)& (0+255),b
  3569  000AC4  5021               	movf	??_PutCANRxFifo& (0+255),w,c
  3570  000AC6  0012               	return	
  3571  000AC8                     __end_of_PutCANRxFifo:
  3572                           	opt stack 0
  3573                           pclatu	equ	0xFFB
  3574                           pclath	equ	0xFFA
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           intcon2	equ	0xFF1
  3583                           intcon3	equ	0xFF0
  3584                           postinc0	equ	0xFEE
  3585                           fsr0h	equ	0xFEA
  3586                           fsr0l	equ	0xFE9
  3587                           wreg	equ	0xFE8
  3588                           indf1	equ	0xFE7
  3589                           postinc1	equ	0xFE6
  3590                           fsr1h	equ	0xFE2
  3591                           fsr1l	equ	0xFE1
  3592                           bsr	equ	0xFE0
  3593                           indf2	equ	0xFDF
  3594                           postinc2	equ	0xFDE
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8
  3598                           
  3599 ;; *************** function _ECANReceiveMessage *****************
  3600 ;; Defined at:
  3601 ;;		line 796 in file "ECANPoll.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  id              2   27[COMRAM] PTR unsigned long 
  3604 ;;		 -> high_isr@CANRxNewMessage(14), 
  3605 ;;  data            2   29[COMRAM] PTR unsigned char 
  3606 ;;		 -> high_isr@CANRxNewMessage(14), 
  3607 ;;  dataLen         2   31[COMRAM] PTR unsigned char 
  3608 ;;		 -> high_isr@CANRxNewMessage(14), 
  3609 ;;  msgFlags        2   33[COMRAM] PTR enum E19298
  3610 ;;		 -> high_isr@CANRxNewMessage(14), 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  ptr             2   39[COMRAM] PTR unsigned char 
  3613 ;;		 -> RXB1CON(1), RXB0CON(1), 
  3614 ;;  savedPtr        2   36[COMRAM] PTR unsigned char 
  3615 ;;		 -> RXB1CON(1), RXB0CON(1), 
  3616 ;;  temp            1   41[COMRAM] struct .
  3617 ;;  i               1   38[COMRAM] unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      enum E18559
  3620 ;; Registers used:
  3621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3627 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3628 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3630 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3631 ;;Total ram usage:       15 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    1
  3634 ;; This function calls:
  3635 ;;		__RegsToCANID
  3636 ;; This function is called by:
  3637 ;;		_high_isr
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text19
  3642  00056C                     __ptext19:
  3643                           	opt stack 0
  3644  00056C                     _ECANReceiveMessage:
  3645                           	opt stack 24
  3646                           
  3647                           ;ECANPoll.c: 805: BYTE *ptr, *savedPtr;
  3648                           ;ECANPoll.c: 806: char i;
  3649                           ;ECANPoll.c: 807: BYTE_VAL temp;
  3650                           ;ECANPoll.c: 809: _ECANRxFilterHitInfo.Val = 0;
  3651                           
  3652                           ; BSR set to: 2
  3653                           ;incstack = 0
  3654  00056C  6E24               	movwf	??_ECANReceiveMessage& (0+255),c
  3655  00056E  0E00               	movlw	0
  3656  000570  6E49               	movwf	__ECANRxFilterHitInfo,c
  3657  000572  5024               	movf	??_ECANReceiveMessage& (0+255),w,c
  3658                           
  3659                           ;ECANPoll.c: 819: {
  3660                           ;ECANPoll.c: 821: if ( RXB0FUL )
  3661  000574  AE60               	btfss	3936,7,c	;volatile
  3662  000576  D013               	goto	i2l333
  3663                           
  3664                           ;ECANPoll.c: 822: {
  3665                           ;ECANPoll.c: 824: RXB0IF = 0;
  3666  000578  9077               	bcf	3959,0,c	;volatile
  3667                           
  3668                           ;ECANPoll.c: 827: if ( RXB0OVFL )
  3669  00057A  AE71               	btfss	3953,7,c	;volatile
  3670  00057C  D007               	goto	i2l1111
  3671                           
  3672                           ;ECANPoll.c: 828: {
  3673                           ;ECANPoll.c: 829: *msgFlags |= ECAN_RX_OVERFLOW;
  3674  00057E  C022  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  3675  000582  C023  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  3676  000586  0E00               	movlw	0
  3677  000588  86DB               	bsf	plusw2,3,c
  3678                           
  3679                           ;ECANPoll.c: 830: RXB0OVFL = 0;
  3680  00058A  9E71               	bcf	3953,7,c	;volatile
  3681  00058C                     i2l1111:
  3682                           
  3683                           ;ECANPoll.c: 831: }
  3684                           ;ECANPoll.c: 833: _ECANRxFilterHitInfo.bits.b0 = RXB0FILHIT0;
  3685  00058C  A060               	btfss	3936,0,c	;volatile
  3686  00058E  D002               	bra	i2u5_45
  3687  000590  8049               	bsf	__ECANRxFilterHitInfo,0,c
  3688  000592  D001               	bra	i2u5_47
  3689  000594                     i2u5_45:
  3690  000594  9049               	bcf	__ECANRxFilterHitInfo,0,c
  3691  000596                     i2u5_47:
  3692                           
  3693                           ;ECANPoll.c: 835: ptr = (BYTE*)&RXB0CON;
  3694  000596  0E0F               	movlw	15	;volatile
  3695  000598  6E29               	movwf	ECANReceiveMessage@ptr+1,c
  3696  00059A  0E60               	movlw	96	;volatile
  3697  00059C  D021               	goto	L3
  3698  00059E                     i2l333:
  3699                           
  3700                           ;ECANPoll.c: 838: else if ( RXB1FUL )
  3701  00059E  010F               	movlb	15
  3702  0005A0  AF30               	btfss	48,7,b	;volatile
  3703  0005A2  0012               	return	
  3704                           
  3705                           ;ECANPoll.c: 839: {
  3706                           ;ECANPoll.c: 841: RXB1IF = 0;
  3707  0005A4  9277               	bcf	3959,1,c	;volatile
  3708                           
  3709                           ;ECANPoll.c: 844: if ( RXB1OVFL )
  3710  0005A6  AC71               	btfss	3953,6,c	;volatile
  3711  0005A8  D007               	goto	i2l1121
  3712                           
  3713                           ;ECANPoll.c: 845: {
  3714                           ;ECANPoll.c: 846: *msgFlags |= ECAN_RX_OVERFLOW;
  3715  0005AA  C022  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  3716  0005AE  C023  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  3717  0005B2  0E00               	movlw	0
  3718  0005B4  86DB               	bsf	plusw2,3,c
  3719                           
  3720                           ;ECANPoll.c: 847: RXB1OVFL = 0;
  3721  0005B6  9C71               	bcf	3953,6,c	;volatile
  3722  0005B8                     i2l1121:
  3723                           
  3724                           ;ECANPoll.c: 848: }
  3725                           ;ECANPoll.c: 850: _ECANRxFilterHitInfo.Val = RXB1CON & 0x07;
  3726  0005B8  010F               	movlb	15	; () banked
  3727  0005BA  010F               	movlb	15	; () banked
  3728  0005BC  5130               	movf	48,w,b	;volatile
  3729  0005BE  0B07               	andlw	7
  3730  0005C0  6E49               	movwf	__ECANRxFilterHitInfo,c
  3731                           
  3732                           ; BSR set to: 15
  3733                           ;ECANPoll.c: 852: if ( _ECANRxFilterHitInfo.Val < 0x02 )
  3734  0005C2  0E02               	movlw	2
  3735  0005C4  5C49               	subwf	__ECANRxFilterHitInfo,w,c
  3736  0005C6  B0D8               	btfsc	status,0,c
  3737  0005C8  D006               	goto	i2l1127
  3738                           
  3739                           ; BSR set to: 15
  3740                           ;ECANPoll.c: 853: *msgFlags |= ECAN_RX_DBL_BUFFERED;
  3741  0005CA  C022  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  3742  0005CE  C023  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  3743  0005D2  0E00               	movlw	0
  3744  0005D4  8EDB               	bsf	plusw2,7,c
  3745  0005D6                     i2l1127:
  3746                           
  3747                           ; BSR set to: 15
  3748                           ;ECANPoll.c: 856: ptr = (BYTE*)&RXB1CON;
  3749  0005D6  010F               	movlb	15	; () banked
  3750  0005D8  0E0F               	movlw	15	;volatile
  3751  0005DA  6E29               	movwf	ECANReceiveMessage@ptr+1,c
  3752  0005DC  010F               	movlb	15	; () banked
  3753  0005DE  0E30               	movlw	48	;volatile
  3754  0005E0                     L3:
  3755  0005E0  6E28               	movwf	ECANReceiveMessage@ptr,c
  3756                           
  3757                           ;ECANPoll.c: 939: savedPtr = ptr;
  3758                           
  3759                           ; BSR set to: 15
  3760                           
  3761                           ;ECANPoll.c: 862: }
  3762                           ;ECANPoll.c: 938: _SaveMessage:
  3763                           
  3764                           ; BSR set to: 15
  3765                           ;ECANPoll.c: 861: goto _SaveMessage;
  3766                           
  3767                           ; BSR set to: 15
  3768                           
  3769                           ; BSR set to: 15
  3770                           ;ECANPoll.c: 858: else
  3771                           ;ECANPoll.c: 859: return FALSE;
  3772                           ;	Return value of _ECANReceiveMessage is never used
  3773                           
  3774                           ;ECANPoll.c: 857: }
  3775  0005E2  C029  F026         	movff	ECANReceiveMessage@ptr+1,ECANReceiveMessage@savedPtr+1
  3776  0005E6  C028  F025         	movff	ECANReceiveMessage@ptr,ECANReceiveMessage@savedPtr
  3777                           
  3778                           ;ECANPoll.c: 940: *msgFlags = 0;
  3779  0005EA  C022  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  3780  0005EE  C023  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  3781  0005F2  0E00               	movlw	0
  3782  0005F4  6EDF               	movwf	indf2,c
  3783                           
  3784                           ;ECANPoll.c: 943: temp.Val = *(ptr+5);
  3785  0005F6  EE20 F005          	lfsr	2,5
  3786  0005FA  5028               	movf	ECANReceiveMessage@ptr,w,c
  3787  0005FC  26D9               	addwf	fsr2l,f,c
  3788  0005FE  5029               	movf	ECANReceiveMessage@ptr+1,w,c
  3789  000600  22DA               	addwfc	fsr2h,f,c
  3790  000602  50DF               	movf	indf2,w,c
  3791  000604  6E2A               	movwf	ECANReceiveMessage@temp,c
  3792                           
  3793                           ;ECANPoll.c: 944: *dataLen = temp.Val & 0b00001111;
  3794  000606  502A               	movf	ECANReceiveMessage@temp,w,c
  3795  000608  0B0F               	andlw	15
  3796  00060A  C020  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
  3797  00060E  C021  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
  3798  000612  6EDF               	movwf	indf2,c
  3799                           
  3800                           ;ECANPoll.c: 947: if ( temp.bits.b6 )
  3801  000614  AC2A               	btfss	ECANReceiveMessage@temp,6,c
  3802  000616  D006               	goto	i2l342
  3803                           
  3804                           ;ECANPoll.c: 948: *msgFlags |= ECAN_RX_RTR_FRAME;
  3805  000618  C022  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  3806  00061C  C023  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  3807  000620  0E00               	movlw	0
  3808  000622  8CDB               	bsf	plusw2,6,c
  3809  000624                     i2l342:
  3810                           
  3811                           ;ECANPoll.c: 951: temp.Val = *(ptr+2);
  3812  000624  EE20 F002          	lfsr	2,2
  3813  000628  5028               	movf	ECANReceiveMessage@ptr,w,c
  3814  00062A  26D9               	addwf	fsr2l,f,c
  3815  00062C  5029               	movf	ECANReceiveMessage@ptr+1,w,c
  3816  00062E  22DA               	addwfc	fsr2h,f,c
  3817  000630  50DF               	movf	indf2,w,c
  3818  000632  6E2A               	movwf	ECANReceiveMessage@temp,c
  3819                           
  3820                           ;ECANPoll.c: 952: if ( temp.bits.b3 )
  3821  000634  A62A               	btfss	ECANReceiveMessage@temp,3,c
  3822  000636  D009               	goto	i2l1147
  3823                           
  3824                           ;ECANPoll.c: 953: {
  3825                           ;ECANPoll.c: 954: *msgFlags |= ECAN_RX_XTD_FRAME;
  3826  000638  C022  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  3827  00063C  C023  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  3828  000640  0E00               	movlw	0
  3829  000642  8ADB               	bsf	plusw2,5,c
  3830                           
  3831                           ;ECANPoll.c: 955: temp.Val = 1;
  3832  000644  6E24               	movwf	??_ECANReceiveMessage& (0+255),c
  3833  000646  0E01               	movlw	1
  3834  000648  D002               	goto	L4
  3835  00064A                     i2l1147:
  3836                           
  3837                           ;ECANPoll.c: 957: else
  3838                           ;ECANPoll.c: 958: temp.Val = 0;
  3839  00064A  6E24               	movwf	??_ECANReceiveMessage& (0+255),c
  3840  00064C  0E00               	movlw	0
  3841  00064E                     L4:
  3842  00064E  6E2A               	movwf	ECANReceiveMessage@temp,c
  3843  000650  5024               	movf	??_ECANReceiveMessage& (0+255),w,c
  3844                           
  3845                           ;ECANPoll.c: 960: _RegsToCANID(ptr+1, id, temp.Val);
  3846  000652  0E01               	movlw	1
  3847  000654  2428               	addwf	ECANReceiveMessage@ptr,w,c
  3848  000656  6E13               	movwf	__RegsToCANID@ptr,c
  3849  000658  0E00               	movlw	0
  3850  00065A  2029               	addwfc	ECANReceiveMessage@ptr+1,w,c
  3851  00065C  6E14               	movwf	__RegsToCANID@ptr+1,c
  3852  00065E  C01D  F016         	movff	ECANReceiveMessage@id+1,__RegsToCANID@val+1
  3853  000662  C01C  F015         	movff	ECANReceiveMessage@id,__RegsToCANID@val
  3854  000666  C02A  F017         	movff	ECANReceiveMessage@temp,__RegsToCANID@type
  3855  00066A  EC48  F001         	call	__RegsToCANID	;wreg free
  3856                           
  3857                           ;ECANPoll.c: 963: ptr += 6;
  3858  00066E  0E06               	movlw	6
  3859  000670  2628               	addwf	ECANReceiveMessage@ptr,f,c
  3860  000672  0E00               	movlw	0
  3861  000674  2229               	addwfc	ECANReceiveMessage@ptr+1,f,c
  3862                           
  3863                           ;ECANPoll.c: 964: temp.Val = *dataLen;
  3864  000676  C020  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
  3865  00067A  C021  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
  3866  00067E  50DF               	movf	indf2,w,c
  3867  000680  6E2A               	movwf	ECANReceiveMessage@temp,c
  3868                           
  3869                           ;ECANPoll.c: 965: for ( i = 0; i < temp.Val; i++ )
  3870  000682  6E24               	movwf	??_ECANReceiveMessage& (0+255),c
  3871  000684  0E00               	movlw	0
  3872  000686  6E27               	movwf	ECANReceiveMessage@i,c
  3873  000688  5024               	movf	??_ECANReceiveMessage& (0+255),w,c
  3874  00068A  D00F               	goto	i2l1165
  3875  00068C                     i2l1157:
  3876                           
  3877                           ;ECANPoll.c: 966: *data++ = *ptr++;
  3878  00068C  C028  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
  3879  000690  C029  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
  3880  000694  C01E  FFE1         	movff	ECANReceiveMessage@data,fsr1l
  3881  000698  C01F  FFE2         	movff	ECANReceiveMessage@data+1,fsr1h
  3882  00069C  CFDF FFE7          	movff	indf2,indf1
  3883  0006A0  4A28               	infsnz	ECANReceiveMessage@ptr,f,c
  3884  0006A2  2A29               	incf	ECANReceiveMessage@ptr+1,f,c
  3885  0006A4  4A1E               	infsnz	ECANReceiveMessage@data,f,c
  3886  0006A6  2A1F               	incf	ECANReceiveMessage@data+1,f,c
  3887  0006A8  2A27               	incf	ECANReceiveMessage@i,f,c
  3888  0006AA                     i2l1165:
  3889  0006AA  502A               	movf	ECANReceiveMessage@temp,w,c
  3890  0006AC  5C27               	subwf	ECANReceiveMessage@i,w,c
  3891  0006AE  A0D8               	btfss	status,0,c
  3892  0006B0  D7ED               	goto	i2l1157
  3893                           
  3894                           ;ECANPoll.c: 969: if ( IRXIF )
  3895  0006B2  AE77               	btfss	3959,7,c	;volatile
  3896  0006B4  D007               	goto	i2l1171
  3897                           
  3898                           ;ECANPoll.c: 970: {
  3899                           ;ECANPoll.c: 971: *msgFlags |= ECAN_RX_INVALID_MSG;
  3900  0006B6  C022  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  3901  0006BA  C023  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  3902  0006BE  0E00               	movlw	0
  3903  0006C0  88DB               	bsf	plusw2,4,c
  3904                           
  3905                           ;ECANPoll.c: 972: IRXIF = 0;
  3906  0006C2  9E77               	bcf	3959,7,c	;volatile
  3907  0006C4                     i2l1171:
  3908                           
  3909                           ;ECANPoll.c: 973: }
  3910                           ;ECANPoll.c: 976: *savedPtr &= 0x7f;
  3911  0006C4  C025  FFD9         	movff	ECANReceiveMessage@savedPtr,fsr2l
  3912  0006C8  C026  FFDA         	movff	ECANReceiveMessage@savedPtr+1,fsr2h
  3913  0006CC  0E7F               	movlw	127
  3914  0006CE  16DF               	andwf	indf2,f,c
  3915  0006D0  0012               	return	
  3916  0006D2                     __end_of_ECANReceiveMessage:
  3917                           	opt stack 0
  3918                           pclatu	equ	0xFFB
  3919                           pclath	equ	0xFFA
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           prodh	equ	0xFF4
  3925                           prodl	equ	0xFF3
  3926                           intcon	equ	0xFF2
  3927                           intcon2	equ	0xFF1
  3928                           intcon3	equ	0xFF0
  3929                           postinc0	equ	0xFEE
  3930                           fsr0h	equ	0xFEA
  3931                           fsr0l	equ	0xFE9
  3932                           wreg	equ	0xFE8
  3933                           indf1	equ	0xFE7
  3934                           postinc1	equ	0xFE6
  3935                           fsr1h	equ	0xFE2
  3936                           fsr1l	equ	0xFE1
  3937                           bsr	equ	0xFE0
  3938                           indf2	equ	0xFDF
  3939                           postinc2	equ	0xFDE
  3940                           plusw2	equ	0xFDB
  3941                           fsr2h	equ	0xFDA
  3942                           fsr2l	equ	0xFD9
  3943                           status	equ	0xFD8
  3944                           
  3945 ;; *************** function __RegsToCANID *****************
  3946 ;; Defined at:
  3947 ;;		line 1154 in file "ECANPoll.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  ptr             2   18[COMRAM] PTR unsigned char 
  3950 ;;		 -> RXB1CON(1), RXB0CON(1), 
  3951 ;;  val             2   20[COMRAM] PTR unsigned long 
  3952 ;;		 -> high_isr@CANRxNewMessage(14), 
  3953 ;;  type            1   22[COMRAM] unsigned char 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  Value           2   25[COMRAM] PTR struct _CAN_MESSAGE_
  3956 ;;		 -> high_isr@CANRxNewMessage(14), 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;		None               void
  3959 ;; Registers used:
  3960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3966 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;Total ram usage:        9 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_ECANReceiveMessage
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text20
  3980  000290                     __ptext20:
  3981                           	opt stack 0
  3982  000290                     __RegsToCANID:
  3983                           	opt stack 24
  3984                           
  3985                           ;ECANPoll.c: 1158: CAN_MESSAGE_ID *Value;
  3986                           ;ECANPoll.c: 1160: Value = (CAN_MESSAGE_ID*)val;
  3987                           
  3988                           ;incstack = 0
  3989  000290  C016  F01B         	movff	__RegsToCANID@val+1,__RegsToCANID@Value+1
  3990  000294  C015  F01A         	movff	__RegsToCANID@val,__RegsToCANID@Value
  3991                           
  3992                           ;ECANPoll.c: 1162: if ( type == 0 )
  3993  000298  6617               	tstfsz	__RegsToCANID@type,c
  3994  00029A  D04A               	goto	i2l1661
  3995                           
  3996                           ;ECANPoll.c: 1163: {
  3997                           ;ECANPoll.c: 1165: Value->BYTES.BYTE_1 = (*ptr << 3);
  3998  00029C  C013  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  3999  0002A0  C014  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  4000  0002A4  50DF               	movf	indf2,w,c
  4001  0002A6  6E18               	movwf	??__RegsToCANID& (0+255),c
  4002  0002A8  90D8               	bcf	status,0,c
  4003  0002AA  3618               	rlcf	??__RegsToCANID,f,c
  4004  0002AC  90D8               	bcf	status,0,c
  4005  0002AE  3618               	rlcf	??__RegsToCANID,f,c
  4006  0002B0  90D8               	bcf	status,0,c
  4007  0002B2  3418               	rlcf	??__RegsToCANID,w,c
  4008  0002B4  C01A  FFD9         	movff	__RegsToCANID@Value,fsr2l
  4009  0002B8  C01B  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
  4010  0002BC  6EDF               	movwf	indf2,c
  4011                           
  4012                           ;ECANPoll.c: 1166: Value->BYTES.BYTE_2 = *ptr >> 5;
  4013  0002BE  EE20 F001          	lfsr	2,1
  4014  0002C2  501A               	movf	__RegsToCANID@Value,w,c
  4015  0002C4  26D9               	addwf	fsr2l,f,c
  4016  0002C6  501B               	movf	__RegsToCANID@Value+1,w,c
  4017  0002C8  22DA               	addwfc	fsr2h,f,c
  4018  0002CA  C013  FFE1         	movff	__RegsToCANID@ptr,fsr1l
  4019  0002CE  C014  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
  4020  0002D2  50E7               	movf	indf1,w,c
  4021  0002D4  6E18               	movwf	??__RegsToCANID& (0+255),c
  4022  0002D6  0E05               	movlw	5
  4023  0002D8  6E19               	movwf	(??__RegsToCANID+1)& (0+255),c
  4024  0002DA                     i2u68_45:
  4025  0002DA  90D8               	bcf	status,0,c
  4026  0002DC  3218               	rrcf	??__RegsToCANID,f,c
  4027  0002DE  2E19               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
  4028  0002E0  D7FC               	goto	i2u68_45
  4029  0002E2  5018               	movf	??__RegsToCANID,w,c
  4030  0002E4  6EDF               	movwf	indf2,c
  4031                           
  4032                           ;ECANPoll.c: 1167: ptr++;
  4033  0002E6  4A13               	infsnz	__RegsToCANID@ptr,f,c
  4034  0002E8  2A14               	incf	__RegsToCANID@ptr+1,f,c
  4035                           
  4036                           ;ECANPoll.c: 1168: Value->BYTES.BYTE_1 |= (*ptr >> 5);
  4037  0002EA  C013  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  4038  0002EE  C014  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  4039  0002F2  50DF               	movf	indf2,w,c
  4040  0002F4  6E18               	movwf	??__RegsToCANID& (0+255),c
  4041  0002F6  0E05               	movlw	5
  4042  0002F8  6E19               	movwf	(??__RegsToCANID+1)& (0+255),c
  4043  0002FA                     i2u69_45:
  4044  0002FA  90D8               	bcf	status,0,c
  4045  0002FC  3218               	rrcf	??__RegsToCANID,f,c
  4046  0002FE  2E19               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
  4047  000300  D7FC               	goto	i2u69_45
  4048  000302  C01A  FFD9         	movff	__RegsToCANID@Value,fsr2l
  4049  000306  C01B  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
  4050  00030A  5018               	movf	??__RegsToCANID,w,c
  4051  00030C  12DF               	iorwf	indf2,f,c
  4052                           
  4053                           ;ECANPoll.c: 1169: Value->BYTES.BYTE_3 = 0x00;
  4054  00030E  EE20 F002          	lfsr	2,2
  4055  000312  501A               	movf	__RegsToCANID@Value,w,c
  4056  000314  26D9               	addwf	fsr2l,f,c
  4057  000316  501B               	movf	__RegsToCANID@Value+1,w,c
  4058  000318  22DA               	addwfc	fsr2h,f,c
  4059  00031A  0E00               	movlw	0
  4060  00031C  6EDF               	movwf	indf2,c
  4061                           
  4062                           ;ECANPoll.c: 1170: Value->BYTES.BYTE_4 = 0x00;
  4063  00031E  EE20 F003          	lfsr	2,3
  4064  000322  501A               	movf	__RegsToCANID@Value,w,c
  4065  000324  26D9               	addwf	fsr2l,f,c
  4066  000326  501B               	movf	__RegsToCANID@Value+1,w,c
  4067  000328  22DA               	addwfc	fsr2h,f,c
  4068  00032A  0E00               	movlw	0
  4069  00032C  6EDF               	movwf	indf2,c
  4070                           
  4071                           ;ECANPoll.c: 1171: }
  4072  00032E  0012               	return	
  4073  000330                     i2l1661:
  4074                           
  4075                           ;ECANPoll.c: 1172: else
  4076                           ;ECANPoll.c: 1173: {
  4077                           ;ECANPoll.c: 1175: Value->BYTES.BYTE_3 = (*ptr << 5);
  4078  000330  EE20 F002          	lfsr	2,2
  4079  000334  501A               	movf	__RegsToCANID@Value,w,c
  4080  000336  26D9               	addwf	fsr2l,f,c
  4081  000338  501B               	movf	__RegsToCANID@Value+1,w,c
  4082  00033A  22DA               	addwfc	fsr2h,f,c
  4083  00033C  C013  FFE1         	movff	__RegsToCANID@ptr,fsr1l
  4084  000340  C014  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
  4085  000344  50E7               	movf	indf1,w,c
  4086  000346  6E18               	movwf	??__RegsToCANID& (0+255),c
  4087  000348  0E05               	movlw	5
  4088  00034A  6E19               	movwf	(??__RegsToCANID+1)& (0+255),c
  4089  00034C                     i2u70_45:
  4090  00034C  90D8               	bcf	status,0,c
  4091  00034E  3618               	rlcf	??__RegsToCANID,f,c
  4092  000350  2E19               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
  4093  000352  D7FC               	goto	i2u70_45
  4094  000354  5018               	movf	??__RegsToCANID,w,c
  4095  000356  6EDF               	movwf	indf2,c
  4096                           
  4097                           ;ECANPoll.c: 1176: Value->BYTES.BYTE_4 = (*ptr >> 3);
  4098  000358  EE20 F003          	lfsr	2,3
  4099  00035C  501A               	movf	__RegsToCANID@Value,w,c
  4100  00035E  26D9               	addwf	fsr2l,f,c
  4101  000360  501B               	movf	__RegsToCANID@Value+1,w,c
  4102  000362  22DA               	addwfc	fsr2h,f,c
  4103  000364  C013  FFE1         	movff	__RegsToCANID@ptr,fsr1l
  4104  000368  C014  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
  4105  00036C  50E7               	movf	indf1,w,c
  4106  00036E  6E18               	movwf	??__RegsToCANID& (0+255),c
  4107  000370  90D8               	bcf	status,0,c
  4108  000372  3218               	rrcf	??__RegsToCANID,f,c
  4109  000374  90D8               	bcf	status,0,c
  4110  000376  3218               	rrcf	??__RegsToCANID,f,c
  4111  000378  90D8               	bcf	status,0,c
  4112  00037A  3018               	rrcf	??__RegsToCANID,w,c
  4113  00037C  6EDF               	movwf	indf2,c
  4114                           
  4115                           ;ECANPoll.c: 1177: ptr++;
  4116  00037E  4A13               	infsnz	__RegsToCANID@ptr,f,c
  4117  000380  2A14               	incf	__RegsToCANID@ptr+1,f,c
  4118                           
  4119                           ;ECANPoll.c: 1178: Value->BYTES.BYTE_3 |= (*ptr & 0x03);
  4120  000382  C013  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  4121  000386  C014  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  4122  00038A  50DF               	movf	indf2,w,c
  4123  00038C  6E18               	movwf	??__RegsToCANID& (0+255),c
  4124  00038E  0E03               	movlw	3
  4125  000390  1618               	andwf	??__RegsToCANID,f,c
  4126  000392  EE20 F002          	lfsr	2,2
  4127  000396  501A               	movf	__RegsToCANID@Value,w,c
  4128  000398  26D9               	addwf	fsr2l,f,c
  4129  00039A  501B               	movf	__RegsToCANID@Value+1,w,c
  4130  00039C  22DA               	addwfc	fsr2h,f,c
  4131  00039E  5018               	movf	??__RegsToCANID,w,c
  4132  0003A0  12DF               	iorwf	indf2,f,c
  4133                           
  4134                           ;ECANPoll.c: 1180: Value->BYTES.BYTE_3 |= ((*ptr & 0xe0) >> 3);
  4135  0003A2  C013  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  4136  0003A6  C014  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  4137  0003AA  50DF               	movf	indf2,w,c
  4138  0003AC  6E18               	movwf	??__RegsToCANID& (0+255),c
  4139  0003AE  90D8               	bcf	status,0,c
  4140  0003B0  3218               	rrcf	??__RegsToCANID,f,c
  4141  0003B2  90D8               	bcf	status,0,c
  4142  0003B4  3218               	rrcf	??__RegsToCANID,f,c
  4143  0003B6  90D8               	bcf	status,0,c
  4144  0003B8  3218               	rrcf	??__RegsToCANID,f,c
  4145  0003BA  0E1C               	movlw	28
  4146  0003BC  1618               	andwf	??__RegsToCANID,f,c
  4147  0003BE  EE20 F002          	lfsr	2,2
  4148  0003C2  501A               	movf	__RegsToCANID@Value,w,c
  4149  0003C4  26D9               	addwf	fsr2l,f,c
  4150  0003C6  501B               	movf	__RegsToCANID@Value+1,w,c
  4151  0003C8  22DA               	addwfc	fsr2h,f,c
  4152  0003CA  5018               	movf	??__RegsToCANID,w,c
  4153  0003CC  12DF               	iorwf	indf2,f,c
  4154                           
  4155                           ;ECANPoll.c: 1181: ptr++;
  4156  0003CE  4A13               	infsnz	__RegsToCANID@ptr,f,c
  4157  0003D0  2A14               	incf	__RegsToCANID@ptr+1,f,c
  4158                           
  4159                           ;ECANPoll.c: 1182: Value->BYTES.BYTE_2 = *ptr;
  4160  0003D2  C013  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  4161  0003D6  C014  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  4162  0003DA  EE10 F001          	lfsr	1,1
  4163  0003DE  501A               	movf	__RegsToCANID@Value,w,c
  4164  0003E0  26E1               	addwf	fsr1l,f,c
  4165  0003E2  501B               	movf	__RegsToCANID@Value+1,w,c
  4166  0003E4  22E2               	addwfc	fsr1h,f,c
  4167  0003E6  CFDF FFE7          	movff	indf2,indf1
  4168                           
  4169                           ;ECANPoll.c: 1183: ptr++;
  4170  0003EA  4A13               	infsnz	__RegsToCANID@ptr,f,c
  4171  0003EC  2A14               	incf	__RegsToCANID@ptr+1,f,c
  4172                           
  4173                           ;ECANPoll.c: 1184: Value->BYTES.BYTE_1 = *ptr;
  4174  0003EE  C013  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  4175  0003F2  C014  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  4176  0003F6  C01A  FFE1         	movff	__RegsToCANID@Value,fsr1l
  4177  0003FA  C01B  FFE2         	movff	__RegsToCANID@Value+1,fsr1h
  4178  0003FE  CFDF FFE7          	movff	indf2,indf1
  4179  000402  0012               	return	
  4180  000404                     __end_of__RegsToCANID:
  4181                           	opt stack 0
  4182  0000                     pclatu	equ	0xFFB
  4183                           pclath	equ	0xFFA
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           intcon2	equ	0xFF1
  4192                           intcon3	equ	0xFF0
  4193                           postinc0	equ	0xFEE
  4194                           fsr0h	equ	0xFEA
  4195                           fsr0l	equ	0xFE9
  4196                           wreg	equ	0xFE8
  4197                           indf1	equ	0xFE7
  4198                           postinc1	equ	0xFE6
  4199                           fsr1h	equ	0xFE2
  4200                           fsr1l	equ	0xFE1
  4201                           bsr	equ	0xFE0
  4202                           indf2	equ	0xFDF
  4203                           postinc2	equ	0xFDE
  4204                           plusw2	equ	0xFDB
  4205                           fsr2h	equ	0xFDA
  4206                           fsr2l	equ	0xFD9
  4207                           status	equ	0xFD8
  4208                           pclatu	equ	0xFFB
  4209                           pclath	equ	0xFFA
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           prodh	equ	0xFF4
  4215                           prodl	equ	0xFF3
  4216                           intcon	equ	0xFF2
  4217                           intcon2	equ	0xFF1
  4218                           intcon3	equ	0xFF0
  4219                           postinc0	equ	0xFEE
  4220                           fsr0h	equ	0xFEA
  4221                           fsr0l	equ	0xFE9
  4222                           wreg	equ	0xFE8
  4223                           indf1	equ	0xFE7
  4224                           postinc1	equ	0xFE6
  4225                           fsr1h	equ	0xFE2
  4226                           fsr1l	equ	0xFE1
  4227                           bsr	equ	0xFE0
  4228                           indf2	equ	0xFDF
  4229                           postinc2	equ	0xFDE
  4230                           plusw2	equ	0xFDB
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235                           	psect	rparam
  4236  0000                     pclatu	equ	0xFFB
  4237                           pclath	equ	0xFFA
  4238                           tblptru	equ	0xFF8
  4239                           tblptrh	equ	0xFF7
  4240                           tblptrl	equ	0xFF6
  4241                           tablat	equ	0xFF5
  4242                           prodh	equ	0xFF4
  4243                           prodl	equ	0xFF3
  4244                           intcon	equ	0xFF2
  4245                           intcon2	equ	0xFF1
  4246                           intcon3	equ	0xFF0
  4247                           postinc0	equ	0xFEE
  4248                           fsr0h	equ	0xFEA
  4249                           fsr0l	equ	0xFE9
  4250                           wreg	equ	0xFE8
  4251                           indf1	equ	0xFE7
  4252                           postinc1	equ	0xFE6
  4253                           fsr1h	equ	0xFE2
  4254                           fsr1l	equ	0xFE1
  4255                           bsr	equ	0xFE0
  4256                           indf2	equ	0xFDF
  4257                           postinc2	equ	0xFDE
  4258                           plusw2	equ	0xFDB
  4259                           fsr2h	equ	0xFDA
  4260                           fsr2l	equ	0xFD9
  4261                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         360
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     70      73
    BANK0           160     16      85
    BANK1           256      0     144
    BANK2           256      0     144
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    _RegsToCANID@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@val	PTR unsigned long  size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    _RegsToCANID@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    ECANReceiveMessage@data	PTR unsigned char  size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    ECANReceiveMessage@id	PTR unsigned long  size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    ECANReceiveMessage@dataLen	PTR unsigned char  size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    ECANReceiveMessage@savedPtr	PTR unsigned char  size(2) Largest target is 1
		 -> RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@msgFlags	PTR enum E19298 size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_ECANReceiveMessage
    _ECANReceiveMessage->__RegsToCANID

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_GetThrotle
    _GetThrotle->___lwdiv

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0    1284
                                             10 BANK0      6     6      0
                      _CANRxFifoInit
                      _CANTxFifoInit
                       _ConfigureCCP
                      _ConfigureGPIO
                _ConfigureInterrupts
                _ConfigureOscillator
                    _ConfigureTimers
                       _GetCanAdress
                         _GetKeyCode
                         _GetThrotle
                       _MotorInitVar
               _MotorMeanComputation
                      _PutMotorOrder
                         _SystemTest
 ---------------------------------------------------------------------------------
 (1) _SystemTest                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PutMotorOrder                                        4     3      1     329
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _MotorMeanComputation                                 9     9      0     206
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _MotorInitVar                                         2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GetThrotle                                           2     2      0     474
                                              8 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _GetKeyCode                                           1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GetCanAdress                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimers                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureGPIO                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureCCP                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANTxFifoInit                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANRxFifoInit                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                             18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            28    28      0    1283
                                             42 COMRAM    28    28      0
                 _ECANReceiveMessage
                       _PutCANRxFifo
 ---------------------------------------------------------------------------------
 (5) _PutCANRxFifo                                        16     2     14      86
                                             18 COMRAM    16     2     14
 ---------------------------------------------------------------------------------
 (5) _ECANReceiveMessage                                  15     7      8    1046
                                             27 COMRAM    15     7      8
                       __RegsToCANID
 ---------------------------------------------------------------------------------
 (6) __RegsToCANID                                         9     4      5     489
                                             18 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANRxFifoInit
   _CANTxFifoInit
   _ConfigureCCP
   _ConfigureGPIO
   _ConfigureInterrupts
   _ConfigureOscillator
   _ConfigureTimers
   _GetCanAdress
   _GetKeyCode
   _GetThrotle
     ___lwdiv
   _MotorInitVar
   _MotorMeanComputation
   _PutMotorOrder
   _SystemTest

 _low_isr (ROOT)

 _high_isr (ROOT)
   _ECANReceiveMessage
     __RegsToCANID
   _PutCANRxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      90      10       56.3%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      90       8       56.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      55       5       53.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     46      49       1       76.8%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BE       6        0.0%
DATA                 0      0     1BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Oct 21 15:17:35 2014

                                 bsr 000FE0                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
              __end_of_CANRxFifoInit 0C60                         main@KeyEvent 00B1  
                                l215 08E2                                  l209 07F2  
                                l482 07DA                                  l989 0A40  
                       __CFG_CPB$OFF 000000                                  _PR2 000FCB  
                       __CFG_CPD$OFF 000000                 main@ThrottlePosition 00B4  
                                prod 000FF3                                  wreg 000FE8  
MotorMeanComputation@LocalPowerValue 00AB                __end_of_CANTxFifoInit 0C1E  
                               l2013 0726                                 l2111 084A  
                               l2031 0770                                 l2121 08C2  
                               l2017 0744                                 l2211 09DE  
                               l2115 086A                                 l2051 07B0  
                               l2221 0A2C                                 l2213 09E6  
                               l2037 0786                                 l2209 09CC  
                               l2081 0466                                 l2057 07C6  
                               l2075 0454                                 l2093 0502  
                               l2069 0436                                 l1901 026A  
                               l1861 0180                                 l1891 0224  
                               l1893 0244                                 l1885 0208  
                               l1877 01CE                                 l1977 0BAE  
                               u1255 0552                                 u1467 00DC  
                               u1477 0154                                 _IPR1 000F9F  
                               _IPR2 000FA2                                 _PIE1 000F9D  
                               _IPR3 000FA5                                 _PIE2 000FA0  
                               _IPR4 000FB8                                 _PIE3 000FA3  
                               _IPR5 000F78                                 _PIE4 000FB6  
                               _PIE5 000F76                                 i1l24 0076  
                               i2l20 0966                                 _PIR1 000F9E  
                               _PIR2 000FA1                                 _PIR3 000FA4  
                               _PIR4 000FB7                                 _PIR5 000F77  
                               _WPUB 000F5B                                 _main 00C0  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00BC  
                      __CFG_IESO$OFF 000000                        __CFG_FOSC$HS1 000000  
                _ConfigureInterrupts 0B42                        __CFG_MCLRE$ON 000000  
          ECANReceiveMessage@dataLen 0020                           _GetKeyCode 0CE6  
                   __RegsToCANID@val 0015                     __RegsToCANID@ptr 0013  
                      __CFG_RETEN$ON 000000                           _GetThrotle 07F0  
                              ?_main 0001                      __end_of___lwdiv 0A4A  
                              i2l333 059E                                i2l342 0624  
                              _IRXIF 007BBF                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _PORTB 000F81  
       __end_of_MotorMeanComputation 056C                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
               ?_ConfigureInterrupts 0001                  _ConfigureOscillator 0D00  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       main@OldKeyCode 00B0  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                    __end_of_low_isr 00BC                                tablat 000FF5  
                              plusw2 000FDB                                status 000FD8  
               ?_ConfigureOscillator 0001                      _ConfigureTimers 0C90  
                    __initialization 0C60                         __end_of_main 0290  
                     _LocalCanAdress 0047                               ??_main 00AF  
               __end_of_ConfigureCCP 0CE6                        __activetblptr 000000  
                  __RegsToCANID@type 0017                ??_ConfigureInterrupts 00A5  
                     __CFG_PLLCFG$ON 000000           ECANReceiveMessage@msgFlags 0022  
         ECANReceiveMessage@savedPtr 0025                __size_of_GetCanAdress 0004  
                             _CANCON 000F6F                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _CCPR2L 000F51  
                             _CCPR3L 000F4E                               _ANCON0 000F5D  
                             _ANCON1 000F5C                               _CIOCON 000F70  
                             _MDSEL0 007B96                               _MDSEL1 007B97  
                             i2l1111 058C                               i2l1121 05B8  
                             i2l1127 05D6                      __CFG_BBSIZ$BB2K 000000  
                             i2l1171 06C4                               i2l1147 064A  
                             i2l1157 068C                               i2l1165 06AA  
                             i2l1661 0330                               i2l1813 0AAA  
                     __CFG_WDTEN$OFF 000000                               _INTCON 000FF2  
                             _RXB0IF 007BB8                               _RXB1IF 007BB9  
             ECANReceiveMessage@data 001E                               i2u5_45 0594  
                             i2u5_47 0596               ECANReceiveMessage@temp 002A  
              ??_ConfigureOscillator 00A5                MotorMeanComputation@i 00AD  
                     __CFG_PWRTEN$ON 000000                       __CFG_XINST$OFF 000000  
                         _MotorOrder 00A0                     __end_of_high_isr 09A0  
                        ?_GetKeyCode 0001                       __CFG_STVREN$ON 000000  
                          ??___lwdiv 00A9                               clear_0 0C66  
                             clear_1 0C72                               clear_2 0C7E  
                        ?_GetThrotle 0001                         _GetCanAdress 0D12  
                          ??_low_isr 0001                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                      ?_PutCANRxFifo 0013              __end_of_ConfigureTimers 0CBE  
                         __accesstop 0060              __end_of__initialization 0C8A  
               _MotorMeanComputation 0404                       __pcstackCOMRAM 0001  
                      _msTickCounter 00A4                        ?__RegsToCANID 0013  
        __size_of_ECANReceiveMessage 0166                           _SystemTest 0D0E  
                     ??_PutCANRxFifo 0021                   __RegsToCANID@Value 001A  
                    main@OrderLocked 00B3                  __size_of_GetKeyCode 001A  
              __end_of_ConfigureGPIO 0B42                           __pbssBANK0 0060  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                __size_of_GetThrotle 00FA                ?_MotorMeanComputation 0001  
              __end_of_PutMotorOrder 07F0                        ?_MotorInitVar 0001  
              __size_of_ConfigureCCP 0028                 __ECANRxFilterHitInfo 0049  
                            _CCP2CON 000F50                              _CCP3CON 000F4D  
                            _CCP4CON 000F4A                              _CCP5CON 000F47  
                            _CANSTAT 000F6E                       ??__RegsToCANID 0018  
                            _CCPTMRS 000F99                              _BRGCON1 000E43  
                            _BRGCON2 000E44                              _BRGCON3 000E45  
                            _INTCON2 000FF1                              _INTCON3 000FF0  
                   __CFG_CANMX$PORTB 000000                              _RXB0CON 000F60  
                            _RXB1CON 000F30                              i2u70_45 034C  
                            _RXB0FUL 007B07                              _RXB1FUL 007987  
                            i2u90_41 0A78                              i2u68_45 02DA  
                            i2u69_45 02FA                              i2u88_41 0956  
                            _TXB0CON 000F20                              _TXB1CON 000F10  
                            _TXB2CON 000F00                            ?_high_isr 0001  
                   ?_ConfigureTimers 0001                         _ConfigureCCP 0CBE  
             __size_of_CANRxFifoInit 0042                              __Hparam 0000  
                     ??_MotorInitVar 00A5                              __Lparam 0000  
                          _CANRxFifo 0200                            _CANTxFifo 0100  
             __size_of_CANTxFifoInit 0042                              ___lwdiv 09A0  
             PutCANRxFifo@PutMessage 0013                              __pcinit 0C60  
                            __ramtop 0F00                              __ptext0 00C0  
                            __ptext1 0D0E                              __ptext2 06D2  
                            __ptext3 0404                              __ptext4 0B92  
                            __ptext5 07F0                              __ptext6 09A0  
                            __ptext7 0CE6                              __ptext8 0D12  
                            __ptext9 0C90                            _T0CONbits 000FD5  
                          _T2CONbits 000FCA                 GetThrotle@adc_result 00AD  
                        ?_SystemTest 0001                    __CFG_MSSPMSK$MSK7 000000  
                            _low_isr 0018           MotorMeanComputation@i_1665 00AC  
                         ??_high_isr 002B                       __pintcode_body 08EA  
               end_of_initialization 0C8A                              int_func 08EA  
             ??_MotorMeanComputation 00A5                         ??_GetKeyCode 00A5  
               __end_of_PutCANRxFifo 0AC8                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
        __end_of_ConfigureInterrupts 0B92                        MotorInitVar@i 00A6  
                       ??_GetThrotle 00AD                            _RXM0EXIDM 0077CB  
                      _CANRxFifoInit 0C1E                        _CANTxFifoInit 0BDC  
        __end_of_ConfigureOscillator 0D0E                   __end_of_GetKeyCode 0D00  
               __end_of__RegsToCANID 0404                          _CCP2CONbits 000F50  
                        _CCP3CONbits 000F4D                   __end_of_GetThrotle 08EA  
                __size_of_SystemTest 0004                       ?_CANRxFifoInit 0001  
                start_initialization 0C60                 __end_of_MotorInitVar 0BDC  
                     ?_CANTxFifoInit 0001                ECANReceiveMessage@ptr 0028  
                 main@AutotestResult 00B2           __end_of_ECANReceiveMessage 06D2  
                          _UserOrder 00A2                          __pbssCOMRAM 0047  
                      __pcstackBANK0 00A5                    __size_of_high_isr 0998  
              __size_of_PutCANRxFifo 007E                     ___lwdiv@dividend 00A5  
                          __pintcode 0008                             ?___lwdiv 00A5  
             __size_of_ConfigureGPIO 007A                      ??_CANRxFifoInit 00A5  
                        __pintcodelo 0018                         ??_SystemTest 00A5  
                    ??_CANTxFifoInit 00A5                             ?_low_isr 0001  
             __size_of_PutMotorOrder 011E                          _PADCFG1bits 000F56  
                   ___lwdiv@quotient 00AA                         _PutCANRxFifo 0A4A  
              __size_of__RegsToCANID 0174                             _LATBbits 000F8A  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
                           _LATEbits 000F8D            MotorMeanComputation@value 00A9  
                           _PIR5bits 000F77                             _RCONbits 000FD0  
                 __end_of_SystemTest 0D12             __size_of_ConfigureTimers 002E  
                           _RXB0OVFL 007B8F                             _RXB1OVFL 007B8E  
                           _RXF0SIDH 000EE0                             _RXF0SIDL 000EE1  
                           _RXF1SIDH 000EE4                             _RXF1SIDL 000EE5  
                           _RXF2SIDH 000EE8                             _RXF2SIDL 000EE9  
                           _RXF3SIDH 000EEC                             _RXF3SIDL 000EED  
                           _RXF4SIDH 000EF0                             _RXF4SIDL 000EF1  
                           _RXF5SIDH 000EF4                             _RXF5SIDL 000EF5  
                   ECANPoll@RXBODBEN 007B02                             _RXM0SIDH 000EF8  
                           _RXBODBEN 007B02                             _RXM0SIDL 000EF9  
                           _RXM1SIDH 000EFC                             _RXM1SIDL 000EFD  
            high_isr@CANRxNewMessage 0039                           _ADCON0bits 000FC2  
              __size_of_MotorInitVar 004A                           _ADCON1bits 000FC1  
                         _ADCON2bits 000FC0                        ?_GetCanAdress 0001  
                   __CFG_SOSCSEL$DIG 000000                         __RegsToCANID 0290  
             PutMotorOrder@direction 00A5                       GetKeyCode@temp 00A5  
                        _INTCON2bits 000FF1                        _ConfigureGPIO 0AC8  
                           __Hrparam 0000                 ECANReceiveMessage@id 001C  
      __size_of_MotorMeanComputation 0168                             __Lrparam 0000  
                      _PutMotorOrder 06D2                         _MotorInitVar 0B92  
                 __CFG_BOREN$SBORDIS 000000                     __size_of___lwdiv 00AA  
                     ??_GetCanAdress 00A5         __size_of_ConfigureInterrupts 0050  
                    ___lwdiv@divisor 00A7                      ___lwdiv@counter 00AC  
                   __size_of_low_isr 00A4                             __ptext10 0D00  
                           __ptext11 0B42                             __ptext20 0290  
                           __ptext12 0AC8                             __ptext13 0CBE  
                           __ptext14 0BDC                             __ptext15 0C1E  
                           __ptext18 0A4A                             __ptext19 056C  
                     ?_ConfigureGPIO 0001                             _high_isr 0008  
                      __size_of_main 01D0         __size_of_ConfigureOscillator 000E  
                 PutMotorOrder@value 00A8                       ?_PutMotorOrder 00A5  
                        _RXB0FILHIT0 007B00                  __CFG_INTOSCSEL$HIGH 000000  
                  ??_ConfigureTimers 00A5                           _INTCONbits 000FF2  
                ECANReceiveMessage@i 0027                   _ECANReceiveMessage 056C  
                   ecanpoll@RXBODBEN 007B02                             intlevel1 0000  
                           intlevel2 0000                  ?_ECANReceiveMessage 001C  
                      ?_ConfigureCCP 0001                           _OSCCONbits 000FD3  
          _MotorTypeIdentifierAdress 0048                    PutMotorOrder@temp 00A7  
                 __CFG_WDTPS$1048576 000000                 ??_ECANReceiveMessage 0024  
                    ??_ConfigureGPIO 00A5                           _RXM1EXIDEN 0077EB  
                _TempMotorOrdertable 0060                       ??_ConfigureCCP 00A5  
                __CFG_BORPWR$ZPBORMV 000000                 __end_of_GetCanAdress 0D16  
                    ??_PutMotorOrder 00A6  
